{"nodes":[{"content":"Azure Security Guidance","pos":[1,24]},{"content":"Abstract","pos":[28,36]},{"content":"When developing applications for Azure, identity and access are the primary security concerns that you need to keep in mind.","pos":[38,162],"source":"When developing applications for Azure, identity and\naccess are the primary security concerns that you need to keep in mind."},{"content":"This topic explains the key security concerns related to identity and access in the cloud and how you can best protect your cloud applications.","pos":[163,306],"source":"\nThis topic explains the key security concerns related to identity and access in the cloud and how you\ncan best protect your cloud applications."},{"content":"Overview","pos":[310,318]},{"content":"An application's security is a function of its surface.","pos":[320,375]},{"content":"The more surface that the application exposes the greater the security concerns.","pos":[376,456],"source":" The more surface\nthat the application exposes the greater the security concerns."},{"content":"For example, an application that runs as an unattended batch process exposes less, from a security perspective, than a publicly available website.","pos":[457,603],"source":" For\nexample, an application that runs as an unattended batch process exposes\nless, from a security perspective, than a publicly available website."},{"content":"When you move to the cloud you gain a certain peace of mind about infrastructure and networking since these are managed in data centers with world-class security practices, tools, technology.","pos":[605,796],"source":"When you move to the cloud you gain a certain peace of mind about\ninfrastructure and networking since these are managed in data centers\nwith world-class security practices, tools, technology."},{"content":"On the other hand, the cloud intrinsically exposes more surface area for your application that can be potentially exploited by attackers.","pos":[797,934],"source":" On the other\nhand, the cloud intrinsically exposes more surface area for your\napplication that can be potentially exploited by attackers."},{"content":"This is because many cloud technologies and services are exposed as end points vs. in-memory components.","pos":[935,1039],"source":" This is\nbecause many cloud technologies and services are exposed as end points\nvs. in-memory components."},{"content":"Azure storage, Service Bus, SQL Database (formerly SQL Azure), and many other services are accessible via their endpoints over the wire.","pos":[1040,1176],"source":" Azure storage, Service Bus, SQL\nDatabase (formerly SQL Azure), and many other services are accessible\nvia their endpoints over the wire."},{"content":"In cloud applications more responsibility lays on the shoulders of the application developers to design, develop, and maintain their cloud applications to high security standards to keep attackers at bay.","pos":[1178,1382],"source":"In cloud applications more responsibility lays on the shoulders of the\napplication developers to design, develop, and maintain their cloud\napplications to high security standards to keep attackers at bay."},{"content":"Consider the following diagram (from J.D.","pos":[1383,1424],"source":"\nConsider the following diagram (from J.D."},{"content":"Meier's <bpt id=\"p1\">[</bpt>Azure Security Notes PDF<ept id=\"p1\">](http://blogs.msdn.com/b/jmeier/archive/2010/08/03/now-available-azure-security-notes-pdf.aspx)</ept>): notice how the infrastructure part is being addressed by the cloud provider--in our case by Azure--leaving more security work to the application developers:","pos":[1425,1713],"source":" Meier's [Azure Security\nNotes PDF](http://blogs.msdn.com/b/jmeier/archive/2010/08/03/now-available-azure-security-notes-pdf.aspx)): notice how the infrastructure part is being addressed by the\ncloud provider--in our case by Azure--leaving more security work\nto the application developers:"},{"content":"Securing the application","pos":[1717,1741]},{"content":"The good news is that all of the security development practices, principles, and techniques you already know still apply when developing cloud applications.","pos":[1748,1904],"source":"The good news is that all of the security development practices,\nprinciples, and techniques you already know still apply when developing\ncloud applications."},{"content":"Consider the following key areas that must be addressed:","pos":[1905,1961],"source":" Consider the following key areas that must be\naddressed:"},{"pos":[1967,2131],"content":"All input is validated for type, length, range, and string patterns to avoid injection attacks, and all the data your app echoes back is properly sanitized.","leadings":["","    ","    "],"source":"All input is validated for type, length, range, and string patterns\nto avoid injection attacks, and all the data your app echoes back is\nproperly sanitized."},{"pos":[2136,2261],"content":"Sensitive data should be protected at rest and on the wire to mitigate information disclosure and data tampering threats.","leadings":["","    "],"source":"Sensitive data should be protected at rest and on the wire to\nmitigate information disclosure and data tampering threats."},{"pos":[2266,2356],"content":"Auditing and logging must be properly implemented to mitigate non repudiation threats.","leadings":["","    "],"source":"Auditing and logging must be properly implemented to mitigate non\nrepudiation threats."},{"pos":[2361,2537],"content":"Authentication and Authorization should be implemented using proven mechanisms offered by the platform to prevent identity spoofing and elevation of privileges threats.","leadings":["","    ","    "],"source":"Authentication and Authorization should be implemented using proven\nmechanisms offered by the platform to prevent identity spoofing and\nelevation of privileges threats."},{"pos":[2539,2839],"content":"For a complete list of threats, attacks, vulnerabilities, and countermeasures refer to patterns &amp; practices' <bpt id=\"p1\">[</bpt>Cheat Sheet: Web Application Security Frame<ept id=\"p1\">](http://msdn.microsoft.com/library/ff649461.aspx)</ept> and <bpt id=\"p2\">[</bpt>Security Guidance for Applications Index<ept id=\"p2\">](http://msdn.microsoft.com/library/ff650760.aspx)</ept>.","source":"For a complete list of threats, attacks, vulnerabilities, and\ncountermeasures refer to patterns & practices' [Cheat Sheet: Web\nApplication Security Frame](http://msdn.microsoft.com/library/ff649461.aspx) and [Security Guidance for Applications Index](http://msdn.microsoft.com/library/ff650760.aspx)."},{"content":"In the cloud, authentication and access control mechanisms are very different than those available for on-premises applications.","pos":[2841,2969],"source":"In the cloud, authentication and access control mechanisms are very\ndifferent than those available for on-premises applications."},{"content":"There are many more authentication and access options offered for cloud applications that can lead to confusion, and as a result, to flawed implementations.","pos":[2970,3126],"source":" There are\nmany more authentication and access options offered for cloud\napplications that can lead to confusion, and as a result, to flawed\nimplementations."},{"content":"More confusion is introduced when defining what a cloud app is.","pos":[3127,3190],"source":" More confusion is introduced when defining what a cloud\napp is."},{"content":"For example, the application could be deployed to the cloud yet its authentication mechanism might be provided by Active Directory.","pos":[3191,3322],"source":" For example, the application could be deployed to the cloud yet\nits authentication mechanism might be provided by Active Directory."},{"content":"On other hand, the application could be deployed on-premises but with authentication mechanisms in the cloud (for example, by Azure Active Directory Access Control (previously known as Access Control Service or ACS)).","pos":[3323,3540],"source":" On\nother hand, the application could be deployed on-premises but with\nauthentication mechanisms in the cloud (for example, by Azure\nActive Directory Access Control (previously known as Access Control\nService or ACS))."},{"content":"Threats, Vulnerabilities, and Attacks","pos":[3544,3581]},{"content":"A threat is a potential bad outcome that you want to avoid such as the disclosure of sensitive information or a service becoming unavailable.","pos":[3583,3724],"source":"A threat is a potential bad outcome that you want to avoid such as the\ndisclosure of sensitive information or a service becoming unavailable."},{"content":"It is common practice to classify threats by using the acronym \"STRIDE\":","pos":[3725,3797],"source":"\nIt is common practice to classify threats by using the acronym \"STRIDE\":"},{"pos":[3803,3833],"content":"<bpt id=\"p1\">**</bpt>S<ept id=\"p1\">**</ept>poofing or identity theft","source":"**S**poofing or identity theft"},{"pos":[3838,3861],"content":"<bpt id=\"p1\">**</bpt>T<ept id=\"p1\">**</ept>ampering with data","source":"**T**ampering with data"},{"pos":[3866,3892],"content":"<bpt id=\"p1\">**</bpt>R<ept id=\"p1\">**</ept>epudiation of actions","source":"**R**epudiation of actions"},{"pos":[3897,3923],"content":"<bpt id=\"p1\">**</bpt>I<ept id=\"p1\">**</ept>nformation disclosure","source":"**I**nformation disclosure"},{"pos":[3928,3949],"content":"<bpt id=\"p1\">**</bpt>D<ept id=\"p1\">**</ept>enial of service","source":"**D**enial of service"},{"pos":[3954,3981],"content":"<bpt id=\"p1\">**</bpt>E<ept id=\"p1\">**</ept>levation of privileges","source":"**E**levation of privileges"},{"content":"Vulnerabilities are bugs that we, as developers, introduce into the code that make an application exploitable by attackers.","pos":[3983,4106],"source":"Vulnerabilities are bugs that we, as developers, introduce into the code\nthat make an application exploitable by attackers."},{"content":"For example, sending sensitive data in clear text makes an information disclosure threat possible by a traffic sniffing attack.","pos":[4107,4234],"source":" For example, sending\nsensitive data in clear text makes an information disclosure threat\npossible by a traffic sniffing attack."},{"content":"Attacks are the exploitation of those vulnerabilities to cause harm to an application.","pos":[4236,4322],"source":"Attacks are the exploitation of those vulnerabilities to cause harm to\nan application."},{"content":"For example, a Cross Site Scripting, or XSS, is an attack that exploits unsanitized output.","pos":[4323,4414],"source":" For example, a Cross Site Scripting, or XSS, is an\nattack that exploits unsanitized output."},{"content":"Another example is eavesdropping on the wire to capture credentials sent in clear.","pos":[4415,4497],"source":" Another example is\neavesdropping on the wire to capture credentials sent in clear."},{"content":"These attacks can lead to an identity spoof threat being realized.","pos":[4498,4564],"source":" These\nattacks can lead to an identity spoof threat being realized."},{"content":"To make it simple consider threats, vulnerabilities, and attacks as bad things.","pos":[4565,4644],"source":" To make it\nsimple consider threats, vulnerabilities, and attacks as bad things."},{"content":"Consider the following diagrams as a balcony view of the bad things related to a Web application deployed to Azure (from J.D.","pos":[4645,4770],"source":"\nConsider the following diagrams as a balcony view of the bad things\nrelated to a Web application deployed to Azure (from J.D."},{"content":"Meier's <bpt id=\"p1\">[</bpt>Azure Security Notes PDF<ept id=\"p1\">](http://blogs.msdn.com/b/jmeier/archive/2010/08/03/now-available-azure-security-notes-pdf.aspx)</ept>):","pos":[4771,4902],"source":"\nMeier's [Azure Security Notes PDF](http://blogs.msdn.com/b/jmeier/archive/2010/08/03/now-available-azure-security-notes-pdf.aspx)):"},{"content":"Threats Vulnerabilities and Attacks","pos":[4906,4941]},{"content":"You, as a developer, have control over the vulnerabilities.","pos":[4948,5007]},{"content":"The fewer vulnerabilities that you introduce, the fewer options that are left to attacker to exploit.","pos":[5008,5109],"source":" The fewer\nvulnerabilities that you introduce, the fewer options that are left to\nattacker to exploit."},{"content":"Identity and access related vulnerabilities leave you open to all threats in the STRIDE model.","pos":[5111,5205],"source":"Identity and access related vulnerabilities leave you open to all\nthreats in the STRIDE model."},{"content":"For example, an improperly implemented authentication mechanism may lead to an identity spoof and, as a result, information disclosure, data tampering, elevated privileges operations, or even shutting down the service altogether.","pos":[5206,5435],"source":" For example, an improperly implemented\nauthentication mechanism may lead to an identity spoof and, as a result,\ninformation disclosure, data tampering, elevated privileges operations,\nor even shutting down the service altogether."},{"content":"Consider the following questions that may point to potential vulnerabilities in your cloud app's identity and access implementation:","pos":[5436,5568],"source":" Consider the following\nquestions that may point to potential vulnerabilities in your cloud\napp's identity and access implementation:"},{"pos":[5574,5652],"content":"Are you sending credentials in clear over the wire to your Azure services?","leadings":["","    "],"source":"Are you sending credentials in clear over the wire to your\nAzure services?"},{"content":"Do you store Azure services credentials in clear?","pos":[5657,5706]},{"pos":[5711,5782],"content":"Do your Azure services credentials follow strong password policies?","leadings":["","    "],"source":"Do your Azure services credentials follow strong password\npolicies?"},{"pos":[5787,5875],"content":"Do you rely on Azure to verify credentials vs. using custom verification mechanisms?","leadings":["","    "],"source":"Do you rely on Azure to verify credentials vs.\nusing custom verification mechanisms?"},{"pos":[5880,5982],"content":"Do you limit Azure services authentication sessions or token lifetime to a reasonable time window?","leadings":["","    "],"source":"Do you limit Azure services authentication sessions or token\nlifetime to a reasonable time window?"},{"pos":[5987,6074],"content":"Do you verify permissions for each Azure entry point of your distributed cloud app?","leadings":["","    "],"source":"Do you verify permissions for each Azure entry point of your\ndistributed cloud app?"},{"pos":[6079,6208],"content":"Does your authorization mechanism fail securely without exposing sensitive information, or without allowing limitless access?","leadings":["","    "],"source":"Does your authorization mechanism fail securely without exposing\nsensitive information, or without allowing limitless access?"},{"content":"Countermeasures","pos":[6212,6227]},{"content":"The best countermeasure against an attack is by using the identity and access mechanisms offered by the platform rather than implementing your own.","pos":[6229,6376],"source":"The best countermeasure against an attack is by using the identity and\naccess mechanisms offered by the platform rather than implementing your\nown."},{"content":"Consider the following prominent identity and access technologies:","pos":[6377,6443]},{"content":"Windows Identity Foundation (WIF).","pos":[6447,6481]},{"content":"WIF is a .NET runtime library included with the .NET Framework 4.5 (it is also available as separate download for .NET 3.5/4.0).","pos":[6484,6612],"source":" WIF is a .NET runtime library\nincluded with the .NET Framework 4.5 (it is also available as separate\ndownload for .NET 3.5/4.0)."},{"content":"WIF does the heavy lifting for handling protocols such as WS-Federation and WS-Trust and tokens handling such as Security Assertion Markup Language (SAML) so you don't need to write very complex security-related code in your application.","pos":[6613,6850],"source":" WIF does the heavy lifting for handling\nprotocols such as WS-Federation and WS-Trust and tokens handling such as\nSecurity Assertion Markup Language (SAML) so you don't need to write\nvery complex security-related code in your application."},{"content":"The following resources provide in-depth information about WIF:","pos":[6851,6914],"source":" The following\nresources provide in-depth information about WIF:"},{"pos":[6920,7136],"content":"<bpt id=\"p1\">[</bpt>Windows Identity Foundation 4.5 Samples<ept id=\"p1\">](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=wif&amp;f%5B1%5D.Type=Topic&amp;f%5B1%5D.Value=claims-based%20authentication)</ept> on MSDN Code Gallery.","source":"[Windows Identity Foundation 4.5 Samples](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=wif&f%5B1%5D.Type=Topic&f%5B1%5D.Value=claims-based%20authentication) on MSDN Code Gallery."},{"pos":[7141,7316],"content":"<bpt id=\"p1\">[</bpt>Windows Identity Foundation 4.5 tools for Visual Studio 11 Beta<ept id=\"p1\">](http://visualstudiogallery.msdn.microsoft.com/e21bf653-dfe1-4d81-b3d3-795cb104066e)</ept> on MSDN Code Gallery.","leadings":["","    "],"source":"[Windows Identity Foundation 4.5 tools for Visual Studio 11 Beta](http://visualstudiogallery.msdn.microsoft.com/e21bf653-dfe1-4d81-b3d3-795cb104066e) on\nMSDN Code Gallery."},{"pos":[7321,7439],"content":"<bpt id=\"p1\">[</bpt>Windows Identity Foundation runtime (.Net 3.5/4.0)<ept id=\"p1\">](http://www.microsoft.com/download/details.aspx?id=17331)</ept> on MSDN.","source":"[Windows Identity Foundation runtime (.Net 3.5/4.0)](http://www.microsoft.com/download/details.aspx?id=17331) on MSDN."},{"pos":[7444,7611],"content":"<bpt id=\"p1\">[</bpt>Windows Identity Foundation 3.5/4.0 samples and Visual Studio 2008/2010 templates<ept id=\"p1\">](http://www.microsoft.com/download/details.aspx?displaylang=en&amp;id=4451)</ept> on MSDN.","leadings":["","    "],"source":"[Windows Identity Foundation 3.5/4.0 samples and Visual Studio\n2008/2010 templates](http://www.microsoft.com/download/details.aspx?displaylang=en&id=4451) on MSDN."},{"content":"<bpt id=\"p1\">**</bpt>Azure AD Access Control (previously known as ACS)<ept id=\"p1\">**</ept>.","pos":[7613,7667],"source":"**Azure AD Access Control (previously known as ACS)**."},{"content":"Azure AD Access Control is a cloud service that provides Security Token Service (STS) and allows federation with different identity providers (IdPs) such as a corporate Active Directory or Internet IdPs such as Windows Live ID / Microsoft Account, Facebook, Google, Yahoo!, and Open ID 2.0 identity providers.","pos":[7668,7978],"source":" \nAzure AD Access Control is a cloud service that provides Security Token\nService (STS) and allows federation with different identity providers\n(IdPs) such as a corporate Active Directory or Internet IdPs such as\nWindows Live ID / Microsoft Account, Facebook, Google, Yahoo!, and Open\nID 2.0 identity providers."},{"content":"The following resources provide in-depth information about Azure AD Access Control:","pos":[7979,8062],"source":" The following resources provide in-depth\ninformation about Azure AD Access Control:"},{"content":"Access Control Service 2.0","pos":[8069,8095]},{"content":"Scenarios and Solutions Using ACS","pos":[8152,8185]},{"content":"ACS How To's","pos":[8241,8253]},{"content":"A Guide to Claims-Based Identity and Access Control","pos":[8322,8373]},{"content":"Identity Developer Training Kit","pos":[8429,8460]},{"content":"MSDN-hosted Identity Developer Training Course","pos":[8524,8570]},{"content":"<bpt id=\"p1\">**</bpt>Active Directory Federation Services (AD FS).<ept id=\"p1\">**</ept>Active Directory Federation Services (AD FS) 2.0 provides support for claims-aware identity solutions that involve Windows Server??","pos":[8623,8803],"source":"**Active Directory Federation Services (AD FS).**Active Directory\nFederation Services (AD FS) 2.0 provides support for claims-aware\nidentity solutions that involve Windows Server??"},{"content":"and Active Directory technology.","pos":[8804,8836],"source":" and Active Directory\ntechnology."},{"content":"AD FS 2.0 supports the WS-Trust, WS-Federation, and SAML protocols.","pos":[8837,8904],"source":" AD FS 2.0 supports the WS-Trust, WS-Federation, and SAML\nprotocols."},{"content":"The following resources provide in-depth information about AD FS:","pos":[8905,8970],"source":" The following resources provide in-depth information about AD\nFS:"},{"content":"AD FS 2.0 Content Map","pos":[8977,8998]},{"pos":[9096,9128],"content":"<bpt id=\"p1\">[</bpt>Web SSO Design<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>Web SSO Design<ept id=\"p2\">]</ept>","source":"[Web SSO Design][Web SSO Design]"},{"pos":[9133,9185],"content":"<bpt id=\"p1\">[</bpt>Federated Web SSO Design<ept id=\"p1\">]</ept><bpt id=\"p2\">[</bpt>Federated Web SSO Design<ept id=\"p2\">]</ept>","source":"[Federated Web SSO Design][Federated Web SSO Design]"},{"content":"Azure Shared Access Signatures.","pos":[9189,9220]},{"content":"Shared Access Signatures enable you to fine-tune access to a blob or container resource.","pos":[9223,9311],"source":" Shared Access Signatures\nenable you to fine-tune access to a blob or container resource."},{"content":"The following resources provide in-depth information about Shared Access Signatures.","pos":[9312,9396],"source":" The\nfollowing resources provide in-depth information about Shared Access\nSignatures."},{"content":"Managing Access to Blobs and Containers","pos":[9403,9442]},{"content":"New Storage Feature: Shared Access Signatures","pos":[9498,9543]},{"content":"Shared Access Signatures Are Easy These Days","pos":[9624,9668]},{"content":"Scenarios Map","pos":[9747,9760]},{"content":"This section briefly outlines the key scenarios covered in this topic.","pos":[9762,9832]},{"content":"Use it as a map to determine the right identity solution for your application.","pos":[9833,9911],"source":"\nUse it as a map to determine the right identity solution for your\napplication."},{"pos":[9917,10191],"content":"**ASP.NET Web Form Application with Federated Authentication.** In\nthis scenario you control access to your ASP.NET Web Forms app using\neither Internet identity such as Live ID / Microsoft Account or\ncorporate identity managed in Windows Server Active Directory.","leadings":["","    ","    ","    "],"nodes":[{"content":"ASP.NET Web Form Application with Federated Authentication.","pos":[2,61]},{"content":"In this scenario you control access to your ASP.NET Web Forms app using either Internet identity such as Live ID / Microsoft Account or corporate identity managed in Windows Server Active Directory.","pos":[64,262],"source":" In\nthis scenario you control access to your ASP.NET Web Forms app using\neither Internet identity such as Live ID / Microsoft Account or\ncorporate identity managed in Windows Server Active Directory."}]},{"pos":[10196,10380],"content":"<bpt id=\"p1\">**</bpt>WCF (SOAP) Service with Federated Authentication.<ept id=\"p1\">**</ept>In this scenario you control access to your WCF (SOAP) service using Service Identities managed by Azure AD Access Control.","leadings":["","    ","    "],"source":"**WCF (SOAP) Service with Federated Authentication.**In this\nscenario you control access to your WCF (SOAP) service using Service\nIdentities managed by Azure AD Access Control."},{"pos":[10385,10620],"content":"**WCF (SOAP) Service with Federated Authentication, Identities in\nActive Directory.** In this scenario you control access to your WCF\n(SOAP) web service using identities managed by corporate Windows\nServer Active Directory.","leadings":["","    ","    ","    "],"nodes":[{"content":"WCF (SOAP) Service with Federated Authentication, Identities in Active Directory.","pos":[2,83],"source":"WCF (SOAP) Service with Federated Authentication, Identities in\nActive Directory."},{"content":"In this scenario you control access to your WCF (SOAP) web service using identities managed by corporate Windows Server Active Directory.","pos":[86,223],"source":" In this scenario you control access to your WCF\n(SOAP) web service using identities managed by corporate Windows\nServer Active Directory."}]},{"pos":[10625,10809],"content":"<bpt id=\"p1\">**</bpt>WCF (REST) Service With Federated Authentication.<ept id=\"p1\">**</ept>In this scenario you control access to your WCF (REST) service using Service Identities managed by Azure AD Access Control.","leadings":["","    ","    "],"source":"**WCF (REST) Service With Federated Authentication.**In this\nscenario you control access to your WCF (REST) service using Service\nIdentities managed by Azure AD Access Control."},{"pos":[10814,11041],"content":"**WCF (REST) Service With Live ID / Microsoft Account, Facebook,\nGoogle, Yahoo!, Open ID.** In this scenario you control access to\nyour WCF (REST) service using Internet identity such as Live ID /\nMicrosoft Account.","leadings":["","    ","    ","    "],"nodes":[{"content":"WCF (REST) Service With Live ID / Microsoft Account, Facebook, Google, Yahoo!, Open ID.","pos":[2,89],"source":"WCF (REST) Service With Live ID / Microsoft Account, Facebook,\nGoogle, Yahoo!, Open ID."},{"content":"In this scenario you control access to your WCF (REST) service using Internet identity such as Live ID / Microsoft Account.","pos":[92,215],"source":" In this scenario you control access to\nyour WCF (REST) service using Internet identity such as Live ID /\nMicrosoft Account."}]},{"pos":[11046,11294],"content":"**ASP.NET Web App to REST WCF Service Using Shared SWT Token.** In\nthis scenario you have distributed application with front end\nASP.NET web app and downstream REST service and you want to flow end\nuser's context through physical tiers.","leadings":["","    ","    ","    "],"nodes":[{"content":"ASP.NET Web App to REST WCF Service Using Shared SWT Token.","pos":[2,61]},{"content":"In this scenario you have distributed application with front end ASP.NET web app and downstream REST service and you want to flow end user's context through physical tiers.","pos":[64,236],"source":" In\nthis scenario you have distributed application with front end\nASP.NET web app and downstream REST service and you want to flow end\nuser's context through physical tiers."}]},{"pos":[11299,11487],"content":"**Role-Based Access Control (RBAC) Authorization In Claims-Aware\nApplications and Services.** In this scenario you want to implement\nauthorization logic in your app based on roles.","leadings":["","    ","    "],"nodes":[{"content":"Role-Based Access Control (RBAC) Authorization In Claims-Aware Applications and Services.","pos":[2,91],"source":"Role-Based Access Control (RBAC) Authorization In Claims-Aware\nApplications and Services."},{"content":"In this scenario you want to implement authorization logic in your app based on roles.","pos":[94,180],"source":" In this scenario you want to implement\nauthorization logic in your app based on roles."}]},{"pos":[11492,11682],"content":"**Claims-Based Authorization In Claims-Aware Applications and\nServices.** In this scenario you want to implement authorization\nlogic in your app based on complex authorization rules.","leadings":["","    ","    "],"nodes":[{"content":"Claims-Based Authorization In Claims-Aware Applications and Services.","pos":[2,71],"source":"Claims-Based Authorization In Claims-Aware Applications and\nServices."},{"content":"In this scenario you want to implement authorization logic in your app based on complex authorization rules.","pos":[74,182],"source":" In this scenario you want to implement authorization\nlogic in your app based on complex authorization rules."}]},{"pos":[11687,11840],"content":"<bpt id=\"p1\">**</bpt>Azure Storage Service Identity and Access Scenarios.<ept id=\"p1\">**</ept>In this scenario you need to securely share access to Azure storage blobs and containers.","leadings":["","    ","    "],"source":"**Azure Storage Service Identity and Access Scenarios.**In\nthis scenario you need to securely share access to Azure\nstorage blobs and containers."},{"pos":[11845,12123],"content":"**Azure SQL Database Identity and Access Scenarios.**SQL\nDatabase supports only SQL Server Authentication. Windows\nAuthentication (integrated security) is not supported. Users must\nprovide credentials (login and password) every time they connect to\nSQL Database.","leadings":["","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Azure SQL Database Identity and Access Scenarios.<ept id=\"p1\">**</ept>SQL Database supports only SQL Server Authentication.","pos":[0,106],"source":"**Azure SQL Database Identity and Access Scenarios.**SQL\nDatabase supports only SQL Server Authentication."},{"content":"Windows Authentication (integrated security) is not supported.","pos":[107,169],"source":" Windows\nAuthentication (integrated security) is not supported."},{"content":"Users must provide credentials (login and password) every time they connect to SQL Database.","pos":[170,262],"source":" Users must\nprovide credentials (login and password) every time they connect to\nSQL Database."}]},{"pos":[12128,12251],"content":"<bpt id=\"p1\">**</bpt>Azure Service Bus Identity and Access Scenarios.<ept id=\"p1\">**</ept>In this scenario you need securely access Azure Service Bus queues.","leadings":["","    "],"source":"**Azure Service Bus Identity and Access Scenarios.**In this\nscenario you need securely access Azure Service Bus queues."},{"pos":[12256,12387],"content":"<bpt id=\"p1\">**</bpt>In-Memory Cache Identity and Access Scenarios.<ept id=\"p1\">**</ept>In this scenario you need to securely access data managed by in-memory cache.","leadings":["","    "],"source":"**In-Memory Cache Identity and Access Scenarios.**In this scenario\nyou need to securely access data managed by in-memory cache."},{"pos":[12392,12524],"content":"<bpt id=\"p1\">**</bpt>Azure Marketplace Identity and Access Scenarios.<ept id=\"p1\">**</ept>In this scenario you need to securely access Azure Marketplace datasets.","leadings":["","    ","    "],"source":"**Azure Marketplace Identity and Access Scenarios.**In this\nscenario you need to securely access Azure Marketplace\ndatasets."},{"content":"Azure Identity and Access Scenarios","pos":[12528,12563]},{"content":"This section outlines common identity and access scenarios for different application architectures.","pos":[12565,12664],"source":"This section outlines common identity and access scenarios for different\napplication architectures."},{"content":"Use the Scenarios Map for a quick orientation.","pos":[12665,12711],"source":" Use the Scenarios Map for a quick\norientation."},{"content":"ASP.NET Web Form Application with Federated Authentication","pos":[12716,12774]},{"content":"In this application architecture scenario your web application may be deployed to Azure or on-premises.","pos":[12776,12879],"source":"In this application architecture scenario your web application may be\ndeployed to Azure or on-premises."},{"content":"The application requires that its users will be authenticated by either corporate Active Directory or Internet identity providers.","pos":[12880,13010],"source":" The application requires that\nits users will be authenticated by either corporate Active Directory or\nInternet identity providers."},{"pos":[13012,13096],"content":"To solve this scenarios use Azure AD Access control and Windows Identity Foundation.","source":"To solve this scenarios use Azure AD Access control and Windows\nIdentity Foundation."},{"content":"Azure Active Directory Access control","pos":[13100,13137]},{"content":"Refer to the following resources to implement this scenario:","pos":[13144,13204]},{"content":"How To: Create My First Claims-Aware ASP.NET Application Using ACS","pos":[13211,13277]},{"content":"How To: Host Login Pages in Your ASP.NET Web Application","pos":[13333,13389]},{"content":"How To: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS","pos":[13445,13539]},{"pos":[13599,13709],"content":"How To: Implement Role Based Access Control (RBAC) in a Claims-Aware ASP.NET Application Using WIF and ACS","leadings":["","    "],"source":"How To: Implement Role Based Access Control (RBAC) in a Claims-Aware\nASP.NET Application Using WIF and ACS"},{"pos":[13765,13858],"content":"How To: Configure Trust Between ACS and ASP.NET Web Applications Using X.509 Certificates","leadings":["","    "],"source":"How To: Configure Trust Between ACS and ASP.NET Web Applications\nUsing X.509 Certificates"},{"content":"Code Sample: ASP.NET Simple Forms","pos":[13914,13947]},{"content":"WCF (SOAP) Service with Service Identity","pos":[14002,14042]},{"content":"In this application architecture scenario your WCF (SOAP) service may be deployed to Azure or on-premises.","pos":[14044,14150],"source":"In this application architecture scenario your WCF (SOAP) service may be\ndeployed to Azure or on-premises."},{"content":"The service is being accessed as a downstream service by a web application or even by another web service.","pos":[14151,14257],"source":" The service is being accessed\nas a downstream service by a web application or even by another web\nservice."},{"content":"You need to control access to it using application specific identity.","pos":[14258,14327],"source":" You need to control access to it using application specific\nidentity."},{"content":"Think of it in terms of the type of app pool account that you used in IIS - although the technology is different, the approaches are similar in that the service is accessed using an application scope account vs. end user account.","pos":[14328,14557],"source":" Think of it in terms of the type of app pool account that you\nused in IIS - although the technology is different, the approaches are\nsimilar in that the service is accessed using an application scope\naccount vs. end user account."},{"content":"Use the Service Identity feature in Azure AD Access control.","pos":[14559,14619]},{"content":"This is similar to the IIS app pool account you were using when deploying your apps to Windows Server and IIS.","pos":[14620,14730],"source":"\nThis is similar to the IIS app pool account you were using when\ndeploying your apps to Windows Server and IIS."},{"content":"Configure Azure AD Access Control to issue SAML tokens that will be handled by WIF at the WCF (SOAP) service.","pos":[14731,14840],"source":" Configure Azure\nAD Access Control to issue SAML tokens that will be handled by WIF at\nthe WCF (SOAP) service."},{"content":"WCF (SOAP) Service","pos":[14844,14862]},{"content":"Refer to the following resources to implement this scenario:","pos":[14870,14930]},{"pos":[14937,15025],"content":"How To: Add Service Identities with an X.509 Certificate, Password, or Symmetric Key","leadings":["","    "],"source":"How To: Add Service Identities with an X.509 Certificate, Password,\nor Symmetric Key"},{"pos":[15081,15165],"content":"How To: Authenticate with a Client Certificate to a WCF Service Protected by ACS","leadings":["","    "],"source":"How To: Authenticate with a Client Certificate to a WCF Service\nProtected by ACS"},{"pos":[15221,15308],"content":"How To: Authenticate with a Username and Password to a WCF Service Protected by ACS","leadings":["","    "],"source":"How To: Authenticate with a Username and Password to a WCF Service\nProtected by ACS"},{"content":"Code Sample: WCF Certificate Authentication","pos":[15364,15407]},{"content":"Code Sample: WCF Username Authentication","pos":[15463,15503]},{"content":"WCF (SOAP) Service With Federated Authentication, Identities In Active Directory","pos":[15558,15638]},{"content":"In this application architecture scenario your WCF (SOAP) service may be deployed to Azure or on-premises.","pos":[15640,15746],"source":"In this application architecture scenario your WCF (SOAP) service may be\ndeployed to Azure or on-premises."},{"content":"You need to control access to it by using an identity that is managed by a corporate Windows Server Active Directory (AD).","pos":[15747,15869],"source":" You need to control access to\nit by using an identity that is managed by a corporate Windows Server\nActive Directory (AD)."},{"content":"Use Azure AD Access Control configured for federation with Windows Server AD FS.","pos":[15871,15951],"source":"Use Azure AD Access Control configured for federation with\nWindows Server AD FS."},{"content":"In this case you do not need to configure Service Identity with Azure AD Access Control.","pos":[15952,16040],"source":" In this case you do not need to configure Service\nIdentity with Azure AD Access Control."},{"content":"The agent that needs to access the WCF (SOAP) service provides credentials to AD FS and upon successful authentication is issued the token by AD FS.","pos":[16041,16189],"source":" The agent that needs to\naccess the WCF (SOAP) service provides credentials to AD FS and upon\nsuccessful authentication is issued the token by AD FS."},{"content":"The token is then submitted to Azure AD Access Control and reissued back to the agent.","pos":[16190,16276],"source":" The token is\nthen submitted to Azure AD Access Control and reissued back to\nthe agent."},{"content":"The agent uses the token to submit request to the WCF (SOAP) service.","pos":[16277,16346],"source":" The agent uses the token to submit request to the WCF (SOAP)\nservice."},{"content":"WCF (SOAP) Service With AD","pos":[16350,16376]},{"content":"Refer to the following resources to implement this scenario:","pos":[16383,16443]},{"pos":[16450,16538],"content":"How To: Add Service Identities with an X.509 Certificate, Password, or Symmetric Key","leadings":["","    "],"source":"How To: Add Service Identities with an X.509 Certificate, Password,\nor Symmetric Key"},{"content":"How To: Configure AD FS 2.0 as an Identity Provider","pos":[16594,16645]},{"pos":[16701,16793],"content":"How To: Use Management Service to Configure AD FS 2.0 as an Enterprise Identity Provider","leadings":["","    "],"source":"How To: Use Management Service to Configure AD FS 2.0 as an\nEnterprise Identity Provider"},{"pos":[16849,16905],"content":"Code Sample: WCF Federated Authentication With AD FS 2.0","source":"Code Sample: WCF Federated Authentication With AD FS 2.0\n"},{"content":"WCF (REST) Service With Service Identities","pos":[16961,17003]},{"content":"In this scenario your WCF (REST) service may be deployed to Azure or on-premises.","pos":[17005,17087],"source":"In this scenario your WCF (REST) service may be deployed to \nAzure or on-premises."},{"content":"The service is accessed as a downstream service by a web application or by another web service.","pos":[17088,17183],"source":" The service is accessed as a downstream service by\na web application or by another web service."},{"content":"You need to control access to it using an application-specific identity Think of it in terms of the type of app pool account that you used in IIS - although the technology is different, the approaches are similar in that the service is accessed using an application scope account vs. end user account.","pos":[17184,17485],"source":" You need to control access\nto it using an application-specific identity Think of it in terms of the\ntype of app pool account that you used in IIS - although the technology\nis different, the approaches are similar in that the service is accessed\nusing an application scope account vs. end user account."},{"content":"Use the Service Identity feature in Azure AD Access Control.","pos":[17487,17547]},{"content":"Configure Azure AD Access Control to issue Simple Web Token (SWT) tokens.","pos":[17548,17621],"source":"\nConfigure Azure AD Access Control to issue Simple Web Token\n(SWT) tokens."},{"content":"To handle the SWT token on the REST service side, you can either implement a custom token handler and plug it into the WIF pipeline, or you can parse it \"manually\" without using the WIF infrastructure.","pos":[17622,17823],"source":" To handle the SWT token on the REST service side, you can\neither implement a custom token handler and plug it into the WIF\npipeline, or you can parse it \"manually\" without using the WIF\ninfrastructure."},{"content":"Consider the following diagram (WIF is optional):","pos":[17825,17874]},{"content":"REST Service","pos":[17878,17890]},{"content":"Refer to the following resources to implement this scenario:","pos":[17897,17957]},{"pos":[17964,18040],"content":"How To: Configure Trust Between ACS and WCF Service Using Symmetric Keys","leadings":["","    "],"source":"How To: Configure Trust Between ACS and WCF Service Using Symmetric\nKeys"},{"pos":[18096,18170],"content":"How To: Authenticate to a REST WCF Service Deployed to Azure Using ACS","leadings":["","    "],"source":"How To: Authenticate to a REST WCF Service Deployed to Azure\nUsing ACS"},{"content":"Code Sample: ASP.NET Web Service","pos":[18226,18258]},{"content":"Code Sample: Windows Phone 7 Application","pos":[18314,18354]},{"pos":[18410,18482],"content":"REST WCF With SWT Token Issued By Azure Access Control Service (ACS)","leadings":["","    "],"source":"REST WCF With SWT Token Issued By Azure Access Control\nService (ACS)"},{"content":"WCF (REST) Service with Live ID / Microsoft Account, Facebook, Google, Yahoo!, Open ID","pos":[18553,18639]},{"content":"In this scenario, your WCF (REST) service can be deployed to Azure or on-premises.","pos":[18641,18724],"source":"In this scenario, your WCF (REST) service can be deployed to \nAzure or on-premises."},{"content":"You need to control access to it using a public Internet identity, such as Live ID / Microsoft Account or Facebook.","pos":[18725,18840],"source":" You need to control access to it using a public\nInternet identity, such as Live ID / Microsoft Account or Facebook."},{"content":"Use Azure AD Access Control to issue SWT tokens.","pos":[18842,18890]},{"content":"To handle the SWT token on the REST service side, you can implement a custom token handler and plug it into a WIF pipeline, or you can parse it \"manually\" without using the WIF infrastructure.","pos":[18891,19083],"source":" To handle the\nSWT token on the REST service side, you can implement a custom token\nhandler and plug it into a WIF pipeline, or you can parse it \"manually\"\nwithout using the WIF infrastructure."},{"content":"It is important to note that in order to implement this scenario, the application needs to use web browser control to collect end user credentials.","pos":[19085,19232],"source":"It is important to note that in order to implement this scenario, the\napplication needs to use web browser control to collect end user\ncredentials."},{"content":"This makes it unsuitable for scenarios in which the REST service is accessed from an ASP.NET web app.","pos":[19233,19334],"source":" This makes it unsuitable for scenarios in which the REST\nservice is accessed from an ASP.NET web app."},{"content":"It is only suitable for scenarios in which the REST service is being accessed by the user's client application, such as a Windows Phone 7 app or a rich desktop client.","pos":[19335,19502],"source":" It is only suitable for\nscenarios in which the REST service is being accessed by the user's\nclient application, such as a Windows Phone 7 app or a rich desktop\nclient."},{"content":"The key reason for popping the web browser control is that Internet identities don't natively support active profile scenarios (web services scenario).","pos":[19503,19654],"source":" The key reason for popping the web browser control is that\nInternet identities don't natively support active profile scenarios (web\nservices scenario)."},{"content":"Internet identities mainly support passive profile scenarios (web apps) that rely on browser redirects: this is where web browser control comes handy.","pos":[19655,19805],"source":" Internet identities mainly support passive profile\nscenarios (web apps) that rely on browser redirects: this is where web\nbrowser control comes handy."},{"content":"Consider the following diagram (WIF is optional, and thus not shown):","pos":[19807,19876]},{"content":"WIF is optional","pos":[19880,19895]},{"content":"Refer to the following resources to implement this scenario:","pos":[19902,19962]},{"content":"How To: Authenticate to a REST WCF Service Deployed to Azure Using ACS","pos":[19969,20039]},{"content":"How To: Configure Google as an Identity Provider","pos":[20095,20143]},{"content":"How To: Configure Facebook as an Identity Provider","pos":[20199,20249]},{"content":"How To: Configure Yahoo!","pos":[20305,20329]},{"content":"as an Identity Provider","pos":[20330,20353]},{"content":"Code Sample: Windows Phone 7 Application","pos":[20409,20449]},{"pos":[20505,20577],"content":"REST WCF With SWT Token Issued By Azure Access Control Service (ACS)","leadings":["","    "],"source":"REST WCF With SWT Token Issued By Azure Access Control\nService (ACS)"},{"content":"ASP.NET Web App to REST WCF Service Using Shared SWT Token","pos":[20649,20707]},{"content":"In this scenario you have a distributed application with a front-end ASP.NET web app and a downstream REST service and you want to maintain the end user's context across physical tiers.","pos":[20709,20894],"source":"In this scenario you have a distributed application with a front-end\nASP.NET web app and a downstream REST service and you want to maintain\nthe end user's context across physical tiers."},{"content":"This is sometimes needed when implementing authorization logic or logging based on the end user's identity in the downstream REST service.","pos":[20895,21033],"source":" This is sometimes needed\nwhen implementing authorization logic or logging based on the end user's\nidentity in the downstream REST service."},{"content":"Configure Azure AD Access Control to issue SWT token.","pos":[21035,21088]},{"content":"The SWT token is issued to the front-end ASP.NET web app and then shared with the downstream REST service.","pos":[21089,21195],"source":" The SWT\ntoken is issued to the front-end ASP.NET web app and then shared with\nthe downstream REST service."},{"content":"In this case, there is only one relying party configured in Azure AD Access Control.","pos":[21196,21280],"source":" In this case, there is only one relying\nparty configured in Azure AD Access Control."},{"content":"However, there are several caveats:","pos":[21281,21316],"source":" However, there are\nseveral caveats:"},{"pos":[21322,21633],"content":"Since WIF does not provide a SWT token handler out of the box you\nneed to implement a custom token handler to be used with the ASP.NET\nweb app. You should rely on the heavy lifting that WIF does to\nsupport the WS-Federation protocol that relies on browser redirects\nvs. implementing it yourself.","leadings":["","    ","    ","    ","    "],"nodes":[{"content":"Since WIF does not provide a SWT token handler out of the box you need to implement a custom token handler to be used with the ASP.NET web app.","pos":[0,143],"source":"Since WIF does not provide a SWT token handler out of the box you\nneed to implement a custom token handler to be used with the ASP.NET\nweb app."},{"content":"You should rely on the heavy lifting that WIF does to support the WS-Federation protocol that relies on browser redirects vs. implementing it yourself.","pos":[144,295],"source":" You should rely on the heavy lifting that WIF does to\nsupport the WS-Federation protocol that relies on browser redirects\nvs. implementing it yourself."}]},{"pos":[21638,21856],"content":"When implementing a SWT custom token handler, make sure the\nbootstrap token is being addressed to make sure it's retained.\nOtherwise you won't be able to share it and send it to the\ndownstream REST service.","leadings":["","    ","    ","    "],"nodes":[{"content":"When implementing a SWT custom token handler, make sure the bootstrap token is being addressed to make sure it's retained.","pos":[0,122],"source":"When implementing a SWT custom token handler, make sure the\nbootstrap token is being addressed to make sure it's retained."},{"content":"Otherwise you won't be able to share it and send it to the downstream REST service.","pos":[123,206],"source":"Otherwise you won't be able to share it and send it to the\ndownstream REST service."}]},{"pos":[21861,22013],"content":"You don't have to use WIF on a REST service; rather, you can parse the token \"manually\" since there is no need to handle redirects in this case.","leadings":["","    ","    "],"source":"You don't have to use WIF on a REST service; rather, you can parse\nthe token \"manually\" since there is no need to handle redirects in\nthis case."},{"content":"ASP.NET Web Application","pos":[22017,22040]},{"content":"Refer to the following resources to implement this scenario:","pos":[22047,22107]},{"content":"How To: Configure Google as an Identity Provider","pos":[22114,22162]},{"content":"How To: Configure Facebook as an Identity Provider","pos":[22218,22268]},{"content":"How To: Configure Yahoo!","pos":[22324,22348]},{"content":"as an Identity Provider","pos":[22349,22372]},{"pos":[22428,22501],"content":"ASP.NET Web App To REST WCF Service Delegation Using Shared SWT Token","leadings":["","    "],"source":"ASP.NET Web App To REST WCF Service Delegation Using Shared SWT\nToken"},{"content":"Role-Based Access Control (RBAC) In Claims-Aware Applications and Services","pos":[22575,22649]},{"content":"In this scenario you need to implement authorization in your web application or service based on user roles: user with required roles get access and those that don't have required roles are denied.","pos":[22651,22848],"source":"In this scenario you need to implement authorization in your web\napplication or service based on user roles: user with required roles get\naccess and those that don't have required roles are denied."},{"content":"Simply put, your application needs to answer simple question - is the user in role X?","pos":[22849,22934],"source":" Simply put,\nyour application needs to answer simple question - is the user in role\nX?"},{"content":"There are several ways to solve this scenario.","pos":[22936,22982]},{"content":"You can use Azure AD Access Control, WIF Claims Authentication Manager, samlSecurityTokenRequirement mapping, or Customer Role Manager.","pos":[22983,23118],"source":" You can use Azure\nAD Access Control, WIF Claims Authentication Manager,\nsamlSecurityTokenRequirement mapping, or Customer Role Manager."},{"content":"WIF is used in all cases.","pos":[23120,23145]},{"content":"WIF supports the IPrincipal.IsInRole(\"MyRole\") method.","pos":[23146,23200],"source":" WIF supports the IPrincipal.IsInRole(\"MyRole\")\nmethod."},{"content":"In most of the cases the key is to make sure there is role type claim with URI of http://schemas.microsoft.com/ws/2008/06/identity/claims/role in the token so that WIF can successfully verify role membership when the IsInRole method is called.","pos":[23201,23444],"source":" In most of the cases the key is to make sure there is role type\nclaim with URI of\nhttp://schemas.microsoft.com/ws/2008/06/identity/claims/role in the\ntoken so that WIF can successfully verify role membership when the\nIsInRole method is called."},{"content":"<bpt id=\"p1\">**</bpt>Azure AD Access Control<ept id=\"p1\">**</ept>.","pos":[23446,23474],"source":"**Azure AD Access Control**."},{"content":"In this implementation the Azure AD Access Control claims transformation rule engine is used.","pos":[23475,23569],"source":" In this implementation the \nAzure AD Access Control claims transformation rule engine is used."},{"content":"Using the claims transformation rule engine rules you can transform any incoming claim into a role type claim so that when the token hits the application or a service WIF can parse this role claim to make sure IsInRole method call is succesful.","pos":[23570,23814],"source":" Using\nthe claims transformation rule engine rules you can transform any\nincoming claim into a role type claim so that when the token hits the\napplication or a service WIF can parse this role claim to make sure\nIsInRole method call is succesful."},{"content":"<bpt id=\"p1\">**</bpt>WIF ClaimsAuthenticationManager<ept id=\"p1\">**</ept>.","pos":[23825,23861],"source":"**WIF ClaimsAuthenticationManager**."},{"content":"In this implementation use ClaimsAuthenticationManager as WIF's extensibility point.","pos":[23862,23946],"source":" In this implementation use\nClaimsAuthenticationManager as WIF's extensibility point."},{"content":"Using this approach you transform any arbitrary incoming claims to a role claim type at the application.","pos":[23947,24051],"source":" Using this\napproach you transform any arbitrary incoming claims to a role claim\ntype at the application."},{"content":"The complexity of the transformation is only limited by the code you write.","pos":[24052,24127],"source":" The complexity of the transformation is only\nlimited by the code you write."},{"content":"<bpt id=\"p1\">**</bpt>samlSecurityTokenRequriement mapping<ept id=\"p1\">**</ept>.","pos":[24138,24179],"source":"**samlSecurityTokenRequriement mapping**."},{"content":"In this implementation you use the samlSecurityTokenRequirement configuration in web.config to tell WIF which claim types behave as if they were role claim types.","pos":[24180,24342],"source":" In this implementation you use\nthe samlSecurityTokenRequirement configuration in web.config to tell WIF\nwhich claim types behave as if they were role claim types."},{"content":"For example, if the token carries a claim of group type, you can map it to role claim type.","pos":[24343,24434],"source":" For example,\nif the token carries a claim of group type, you can map it to role claim\ntype."},{"content":"You can achieve only simple mappings using this approach.","pos":[24435,24492]},{"content":"Custom RoleManager.","pos":[24505,24524]},{"content":"In this implementation you implement custom RoleManger.","pos":[24527,24582],"source":" In this implementation you implement custom\nRoleManger."},{"content":"WIF is used to inspect the incoming claims when implementing custom RoleManager interface methods such as GetAllRoles().","pos":[24583,24703],"source":" WIF is used to inspect the incoming claims when implementing\ncustom RoleManager interface methods such as GetAllRoles()."},{"content":"Refer to the following resources to implement this scenario:","pos":[24714,24774]},{"pos":[24781,24891],"content":"How To: Implement Role Based Access Control (RBAC) in a Claims-Aware ASP.NET Application Using WIF and ACS","leadings":["","    "],"source":"How To: Implement Role Based Access Control (RBAC) in a Claims-Aware\nASP.NET Application Using WIF and ACS"},{"content":"How To: Implement Token Transformation Logic Using Rules","pos":[24947,25003]},{"pos":[25059,25141],"content":"Authorization With RoleManager For Claims Aware (WIF) ASP.NET Web Applications","leadings":["","    "],"source":"Authorization With RoleManager For Claims Aware (WIF) ASP.NET Web\nApplications"},{"pos":[25279,25452],"content":"Code Sample: Using Claims In IsInRole in <bpt id=\"p1\">[</bpt>Windows Identity Foundation SDK<ept id=\"p1\">](http://www.microsoft.com/downloads/details.aspx?FamilyID=c148b2df-c7af-46bb-9162-2c9422208504)</ept>","leadings":["","    "],"source":"Code Sample: Using Claims In IsInRole in [Windows Identity Foundation\nSDK](http://www.microsoft.com/downloads/details.aspx?FamilyID=c148b2df-c7af-46bb-9162-2c9422208504)"},{"content":"Claims-Based Authorization In Claims-Aware Applications and Services","pos":[25457,25525]},{"content":"In this scenario you need to implement complex authorization logic in your web application or service and the IsInRole() method is not satisfactory for your authorization needs.","pos":[25527,25704],"source":"In this scenario you need to implement complex authorization logic in\nyour web application or service and the IsInRole() method is not\nsatisfactory for your authorization needs."},{"content":"If your authorization approach relies on roles then consider implementing role-based access control outlined in previous section.","pos":[25705,25834],"source":" If your authorization\napproach relies on roles then consider implementing role-based access\ncontrol outlined in previous section."},{"content":"Use ClaimsAuthorizationManager as the WIF extensibility point.","pos":[25836,25898]},{"content":"ClaimsAuthorizationManager allows external access check calls so that your application code looks cleaner and more maintainable than when access checks implemented in the application's code.","pos":[25899,26089],"source":"\nClaimsAuthorizationManager allows external access check calls so that\nyour application code looks cleaner and more maintainable than when\naccess checks implemented in the application's code."},{"content":"Refer to the following resources to implement this scenario:","pos":[26100,26160]},{"content":"How To: Implement Token Transformation Logic Using Rules","pos":[26167,26223]},{"pos":[26279,26377],"content":"How To: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS","leadings":["","    "],"source":"How To: Implement Claims Authorization in a Claims-Aware ASP.NET\nApplication Using WIF and ACS"},{"pos":[26432,26607],"content":"Code Sample: Claims based Authorization in <bpt id=\"p1\">[</bpt>Windows Identity Foundation SDK<ept id=\"p1\">](http://www.microsoft.com/downloads/details.aspx?FamilyID=c148b2df-c7af-46bb-9162-2c9422208504)</ept>","leadings":["","    "],"source":"Code Sample: Claims based Authorization in [Windows Identity\nFoundation SDK](http://www.microsoft.com/downloads/details.aspx?FamilyID=c148b2df-c7af-46bb-9162-2c9422208504)"},{"content":"Azure Storage Service Identity and Access Scenarios","pos":[26612,26663]},{"pos":[26665,26754],"content":"In this scenario you need to securely share access to Azure storage blobs and containers.","source":"In this scenario you need to securely share access to Azure\nstorage blobs and containers."},{"content":"Use Shared Access Signatures.","pos":[26756,26785]},{"content":"To access your storage service account from your own application, use the shared hash that is available through Azure portal when you configure and manage your storage service accounts.","pos":[26786,26971],"source":" To access your storage service account\nfrom your own application, use the shared hash that is available through\nAzure portal when you configure and manage your storage service\naccounts."},{"content":"When you want to give someone else access to the blobs and containers in your storage service account use Shared Access Signatures URL's.","pos":[26972,27109],"source":" When you want to give someone else access to the blobs and\ncontainers in your storage service account use Shared Access Signatures\nURL's."},{"pos":[27111,27269],"content":"Pay special attention to securely managing the information to avoid its exposure; also, pay special attention to the lifetime of the Shared Access Signatures.","source":"Pay special attention to securely managing the information to avoid its\nexposure; also, pay special attention to the lifetime of the Shared\nAccess Signatures."},{"content":"Refer to the following resources to solve this scenario","pos":[27280,27335]},{"content":"Managing Access to Blobs and Containers","pos":[27342,27381]},{"content":"New Storage Feature: Shared Access Signatures","pos":[27437,27482]},{"content":"Shared Access Signatures Are Easy These Days","pos":[27563,27607]},{"content":"Azure SQL Database Identity and Access Scenarios","pos":[27688,27736]},{"content":"SQL Database only supports SQL Server Authentication.","pos":[27739,27792]},{"content":"Windows Authentication (integrated security) is not supported.","pos":[27793,27855],"source":" Windows\nAuthentication (integrated security) is not supported."},{"content":"Users must provide credentials (login and password) every time they connect to a SQL Database.","pos":[27856,27950],"source":" Users must\nprovide credentials (login and password) every time they connect to a\nSQL Database."},{"content":"Pay special attention when managing your username and password to avoid information disclosure.","pos":[27951,28046],"source":" Pay special attention when managing your username and\npassword to avoid information disclosure."},{"content":"To solve this scenario, refer to the following Help topic:","pos":[28059,28117]},{"content":"Azure SQL Database Development: How-to Topics","pos":[28124,28169]},{"content":"Or refer to one of its many child topics, some of which are:","pos":[28228,28288]},{"content":"How to: Connect to SQL Database Using sqlcmd","pos":[28294,28338]},{"content":"Code sample: Retry logic for connecting to Azure SQL Database with ADO.NET","pos":[28398,28472]},{"content":"How to: Connect to SQL Database Using PHP","pos":[28532,28573]},{"content":"How to: Connect to SQL Database Using JDBC","pos":[28633,28675]},{"content":"Or refer to:","pos":[28734,28746]},{"content":"Azure SQL Database Security Guidelines and Limitations","pos":[28753,28807]},{"content":"Azure Service Bus Identity and Access Scenarios","pos":[28883,28930]},{"content":"The Service Bus and Azure AD Access Control have a special relationship in that each Service Bus service namespace is paired with a matching Access Control service namespace of the same name, with the suffix \"-sb\".","pos":[28932,29146],"source":"The Service Bus and Azure AD Access Control have a special\nrelationship in that each Service Bus service namespace is paired with a\nmatching Access Control service namespace of the same name, with the\nsuffix \"-sb\"."},{"content":"The reason for this special relationship is in the way that Service Bus and Access Control manage their mutual trust relationship and the associated cryptographic secrets.","pos":[29147,29318],"source":" The reason for this special relationship is in the way\nthat Service Bus and Access Control manage their mutual trust\nrelationship and the associated cryptographic secrets."},{"content":"Refer to the resources listed below for more details.","pos":[29319,29372],"source":" Refer to the\nresources listed below for more details."},{"content":"Refer to the following resources to solve this scenario:","pos":[29383,29439]},{"pos":[29445,29546],"content":"<bpt id=\"p1\">[</bpt>Securing Service Bus with ACS<ept id=\"p1\">](http://channel9.msdn.com/posts/Securing-Service-Bus-with-ACS)</ept> (Video)","source":"[Securing Service Bus with ACS](http://channel9.msdn.com/posts/Securing-Service-Bus-with-ACS) (Video)"},{"pos":[29551,29679],"content":"<bpt id=\"p1\">[</bpt>Securing Service Bus with ACS<ept id=\"p1\">](https://skydrive.live.com/view.aspx?cid=123CCD2A7AB10107&amp;resid=123CCD2A7AB10107%211849)</ept> (Slides)","source":"[Securing Service Bus with ACS](https://skydrive.live.com/view.aspx?cid=123CCD2A7AB10107&resid=123CCD2A7AB10107%211849) (Slides)"},{"pos":[29685,29765],"content":"Service Bus Authentication and Authorization with the Access Control Service","leadings":["","    "],"source":"Service Bus Authentication and Authorization with the Access Control\nService"},{"content":"In-Memory Cache Identity and Access Scenarios","pos":[29819,29864]},{"content":"In-memory cache (formerly known as Azure Cache) relies on Azure AD Access Control for authentication.","pos":[29866,29967],"source":"In-memory cache (formerly known as Azure Cache) relies on\nAzure AD Access Control for authentication."},{"content":"It uses shared keys available through the management portal.","pos":[29968,30028],"source":" It uses shared keys\navailable through the management portal."},{"content":"Use the keys in your code or configuration files when accessing the cache.","pos":[30029,30103],"source":" Use the keys in your code or\nconfiguration files when accessing the cache."},{"content":"Be sure to store the keys securely so as to avoid information disclosure.","pos":[30104,30177],"source":" Be sure to store the keys\nsecurely so as to avoid information disclosure."},{"content":"Refer to the following resources to solve this scenario:","pos":[30189,30245]},{"pos":[30252,30323],"content":"How to: Configure a Cache Client Programmatically for Azure Caching","leadings":["","    "],"source":"How to: Configure a Cache Client Programmatically for Azure\nCaching"},{"pos":[30392,30487],"content":"How to: Configure a Cache Client using the Application Configuration File for Azure Caching","leadings":["","    "],"source":"How to: Configure a Cache Client using the Application Configuration\nFile for Azure Caching"},{"pos":[30555,30673],"content":"<bpt id=\"p1\">[</bpt>Azure Service Bus and Caching Samples<ept id=\"p1\">](http://msdn.microsoft.com/library/ee706741.aspx)</ept> (Caching Samples section)","leadings":["","    "],"source":"[Azure Service Bus and Caching Samples](http://msdn.microsoft.com/library/ee706741.aspx) (Caching Samples\nsection)"},{"content":"Azure Marketplace Identity and Access Scenarios","pos":[30677,30724]},{"content":"Every access to an Azure Marketplace dataset, whether free or paid, must authenticate the user before access is granted.","pos":[30726,30846],"source":"Every access to an Azure Marketplace dataset, whether free or\npaid, must authenticate the user before access is granted."},{"content":"When you create an application the authentication process must be included in your code.","pos":[30847,30935],"source":" When you\ncreate an application the authentication process must be included in\nyour code."},{"content":"Consider the following common scenarios:","pos":[30936,30976]},{"content":"I Access My Dataset","pos":[30981,31000]},{"content":"In this scenario you are building an application that consumes datasets in your Marketplace subscription.","pos":[31002,31107],"source":"In this scenario you are building an application that consumes datasets\nin your Marketplace subscription."},{"content":"You are the user of the application.","pos":[31108,31144]},{"content":"The application can be deployed either to Azure, on-premises, or Marketplace.","pos":[31145,31222],"source":"\nThe application can be deployed either to Azure, on-premises, or Marketplace."},{"content":"Use the shared key that's available through your Marketplace subscription.","pos":[31224,31298],"source":"Use the shared key that's available through your Marketplace\nsubscription."},{"content":"You obtain the shared key using the Marketplace portal.","pos":[31299,31354]},{"content":"Refer to the following resources to solve this scenario:","pos":[31365,31421]},{"content":"Use HTTP Basic Auth in your Marketplace App","pos":[31428,31471]},{"content":"Users Access My Datasets","pos":[31526,31550]},{"content":"In this scenario you are building an application that allows users to access your dataset.","pos":[31552,31642],"source":"In this scenario you are building an application that allows users to\naccess your dataset."},{"content":"The application can be deployed on Azure, on-premises, or Marketplace.","pos":[31643,31713],"source":" The application can be deployed on Azure,\non-premises, or Marketplace."},{"content":"To solve this scenario, use OAuth delegation.","pos":[31715,31760]},{"content":"Users will be prompted to provide their Live ID / Microsoft Account credentials, and then they will be taken through the consent process.","pos":[31761,31898],"source":" Users will be prompted to\nprovide their Live ID / Microsoft Account credentials, and then they\nwill be taken through the consent process."},{"content":"Refer to the following resources to solve this scenario:","pos":[31909,31965]},{"content":"OAuth Web Client Example","pos":[31972,31996]},{"content":"OAuth Rich Client Example","pos":[32050,32075]},{"content":"Application Access Marketplace API","pos":[32128,32162]},{"content":"In this scenario you are building an application that accesses the Marketplace API.","pos":[32164,32247],"source":"In this scenario you are building an application that accesses the\nMarketplace API."},{"content":"The Marketplace API requires authentication to successfully accomplish calls to it.","pos":[32248,32331],"source":" The Marketplace API requires authentication to\nsuccessfully accomplish calls to it."},{"content":"The application is deployed to Azure Marketplace.","pos":[32332,32381],"source":" The application is deployed to\nAzure Marketplace."},{"pos":[32392,32483],"content":"Consult the Marketplace publishing kit for details about the authentication implementation.","source":"Consult the Marketplace publishing kit for details about the\nauthentication implementation."},{"content":"Refer to the following resources to solve this scenario:","pos":[32485,32541]},{"content":"Download the App Publishing Kit","pos":[32548,32579]},{"content":"Introduction to Azure Marketplace for Applications","pos":[32633,32683]},{"content":"Security Knobs","pos":[32719,32733]},{"content":"This section outlines security knobs for Windows Identity Foundation and Azure AD Access Control.","pos":[32735,32832],"source":"This section outlines security knobs for Windows Identity Foundation and\nAzure AD Access Control."},{"content":"Use it as a basic security checklist for these technologies when designing and deploying your application.","pos":[32833,32939],"source":" Use it as a basic security checklist\nfor these technologies when designing and deploying your application."},{"content":"Windows Identity Foundation","pos":[32944,32971]},{"content":"The following are key security knobs of WIF.","pos":[32973,33017]},{"content":"The information below is a digest from <bpt id=\"p1\">[</bpt>WIF Design Considerations<ept id=\"p1\">](http://msdn.microsoft.com/library/ee517298.aspx)</ept> and <bpt id=\"p2\">[</bpt>Windows Identity Foundation (WIF) Security for ASP.NET Web Applications - Threats &amp; Countermeasures<ept id=\"p2\">](http://blogs.msdn.com/b/alikl/archive/2010/12/02/windows-identity-foundation-wif-security-for-asp-net-web-applications-threats-amp-countermeasures.aspx)</ept> .","pos":[33018,33394],"source":" The information below is a\ndigest from [WIF Design Considerations](http://msdn.microsoft.com/library/ee517298.aspx) and [Windows Identity Foundation\n(WIF) Security for ASP.NET Web Applications - Threats & Countermeasures](http://blogs.msdn.com/b/alikl/archive/2010/12/02/windows-identity-foundation-wif-security-for-asp-net-web-applications-threats-amp-countermeasures.aspx)\n."},{"pos":[33400,33517],"content":"**IssuerNameRegistry**. Specifies trusted Security Token Services\n(STS's). Make sure only trusted STS are listed.","leadings":["","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>IssuerNameRegistry<ept id=\"p1\">**</ept>.","pos":[0,23],"source":"**IssuerNameRegistry**."},{"content":"Specifies trusted Security Token Services (STS's).","pos":[24,74],"source":" Specifies trusted Security Token Services\n(STS's)."},{"content":"Make sure only trusted STS are listed.","pos":[75,113]}]},{"pos":[33522,33631],"content":"**cookieHandler requireSsl=\"true\"**. Specifies whether session\ncookies transferred over the SSL protocol.","leadings":["","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>cookieHandler requireSsl=\"true\"<ept id=\"p1\">**</ept>.","pos":[0,36],"source":"**cookieHandler requireSsl=\"true\"**."},{"content":"Specifies whether session cookies transferred over the SSL protocol.","pos":[37,105],"source":" Specifies whether session\ncookies transferred over the SSL protocol."}]},{"pos":[33636,33791],"content":"**wsFederation's requireHttps=\"true\"**. Specifies whether the\nfederation protocol communication with identity provider performed\nover SSL protocol.","leadings":["","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>wsFederation's requireHttps=\"true\"<ept id=\"p1\">**</ept>.","pos":[0,39],"source":"**wsFederation's requireHttps=\"true\"**."},{"content":"Specifies whether the federation protocol communication with identity provider performed over SSL protocol.","pos":[40,147],"source":" Specifies whether the\nfederation protocol communication with identity provider performed\nover SSL protocol."}]},{"pos":[33796,33999],"content":"**tokenReplayDetection enabled=\"true\"**. Specifies whether token\nreplay detection feature is enabled. Be aware that this feature\ncreates server affinity as it manages local copies of used tokens.","leadings":["","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>tokenReplayDetection enabled=\"true\"<ept id=\"p1\">**</ept>.","pos":[0,40],"source":"**tokenReplayDetection enabled=\"true\"**."},{"content":"Specifies whether token replay detection feature is enabled.","pos":[41,101],"source":" Specifies whether token\nreplay detection feature is enabled."},{"content":"Be aware that this feature creates server affinity as it manages local copies of used tokens.","pos":[102,195],"source":" Be aware that this feature\ncreates server affinity as it manages local copies of used tokens."}]},{"pos":[34004,34171],"content":"**audienceUris**. Specifies intended audience of the token. If your\napplication receives a token that was not intended for your app it\nwill be rejected by WIF.","leadings":["","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>audienceUris<ept id=\"p1\">**</ept>.","pos":[0,17],"source":"**audienceUris**."},{"content":"Specifies intended audience of the token.","pos":[18,59]},{"content":"If your application receives a token that was not intended for your app it will be rejected by WIF.","pos":[60,159],"source":" If your\napplication receives a token that was not intended for your app it\nwill be rejected by WIF."}]},{"pos":[34176,34636],"content":"**requestValidation** and **httpRuntime requestValidationType**.\nEnables/disables ASP.NET validation feature. See guidance as\noutlined in [Windows Identity Foundation (WIF): A Potentially\nDangerous Request.Form Value Was Detected from the Client](http://social.technet.microsoft.com/wiki/contents/articles/1725.windows-identity-foundation-wif-a-potentially-dangerous-request-form-value-was-detected-from-the-client-wresult-t-requestsecurityto.aspx)","leadings":["","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>requestValidation<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>httpRuntime requestValidationType<ept id=\"p2\">**</ept>.","pos":[0,64],"source":"**requestValidation** and **httpRuntime requestValidationType**."},{"content":"Enables/disables ASP.NET validation feature.","pos":[65,109]},{"content":"See guidance as outlined in <bpt id=\"p1\">[</bpt>Windows Identity Foundation (WIF): A Potentially Dangerous Request.Form Value Was Detected from the Client<ept id=\"p1\">](http://social.technet.microsoft.com/wiki/contents/articles/1725.windows-identity-foundation-wif-a-potentially-dangerous-request-form-value-was-detected-from-the-client-wresult-t-requestsecurityto.aspx)</ept>","pos":[110,448],"source":" See guidance as\noutlined in [Windows Identity Foundation (WIF): A Potentially\nDangerous Request.Form Value Was Detected from the Client](http://social.technet.microsoft.com/wiki/contents/articles/1725.windows-identity-foundation-wif-a-potentially-dangerous-request-form-value-was-detected-from-the-client-wresult-t-requestsecurityto.aspx)"}]},{"content":"Azure AD Access Control","pos":[34641,34664]},{"content":"Consider the following security knobs in Azure AD Access Control deployment.","pos":[34666,34742],"source":"Consider the following security knobs in Azure AD Access Control\ndeployment."},{"content":"The information below is a digest from <bpt id=\"p1\">[</bpt>ACS Security Guidelines<ept id=\"p1\">](http://msdn.microsoft.com/library/gg185962.aspx)</ept> and <bpt id=\"p2\">[</bpt>Certificates and Keys Management Guidelines<ept id=\"p2\">](http://msdn.microsoft.com/library/hh204521.aspx)</ept>.","pos":[34743,34956],"source":" The information below is a digest from [ACS Security\nGuidelines](http://msdn.microsoft.com/library/gg185962.aspx) and [Certificates and Keys Management Guidelines](http://msdn.microsoft.com/library/hh204521.aspx)."},{"pos":[34962,35074],"content":"**STS tokens expiration**. Use Azure AD Access Control\nmanagement portal to set aggressive token expiration.","leadings":["","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>STS tokens expiration<ept id=\"p1\">**</ept>.","pos":[0,26],"source":"**STS tokens expiration**."},{"content":"Use Azure AD Access Control management portal to set aggressive token expiration.","pos":[27,108],"source":" Use Azure AD Access Control\nmanagement portal to set aggressive token expiration."}]},{"pos":[35079,35333],"content":"**Data validation when using the Error URL feature**. Azure\nAD Access Control Error URL feature requires anonymous access to the\napp's page where it sends error messages. Assume all data coming to\nthis page as dangerous from untrusted source.","leadings":["","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Data validation when using the Error URL feature<ept id=\"p1\">**</ept>.","pos":[0,53],"source":"**Data validation when using the Error URL feature**."},{"content":"Azure AD Access Control Error URL feature requires anonymous access to the app's page where it sends error messages.","pos":[54,170],"source":" Azure\nAD Access Control Error URL feature requires anonymous access to the\napp's page where it sends error messages."},{"content":"Assume all data coming to this page as dangerous from untrusted source.","pos":[171,242],"source":" Assume all data coming to\nthis page as dangerous from untrusted source."}]},{"pos":[35338,35504],"content":"**Encrypting tokens for highly sensitive scenarios**. To mitigate\nthreat of information disclosure that available in the token\nconsider encrypting the tokens.","leadings":["","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Encrypting tokens for highly sensitive scenarios<ept id=\"p1\">**</ept>.","pos":[0,53],"source":"**Encrypting tokens for highly sensitive scenarios**."},{"content":"To mitigate threat of information disclosure that available in the token consider encrypting the tokens.","pos":[54,158],"source":" To mitigate\nthreat of information disclosure that available in the token\nconsider encrypting the tokens."}]},{"pos":[35509,35783],"content":"**Encrypting cookies using RSA when deploying to Azure**.\nWIF encrypts cookies using DPAPI by default. It creates server\naffinity and may result in exceptions when deployed to web farm and\nAzure environments. Use RSA instead in web farm and \nAzure scenarios.","leadings":["","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Encrypting cookies using RSA when deploying to Azure<ept id=\"p1\">**</ept>.","pos":[0,57],"source":"**Encrypting cookies using RSA when deploying to Azure**."},{"content":"WIF encrypts cookies using DPAPI by default.","pos":[58,102]},{"content":"It creates server affinity and may result in exceptions when deployed to web farm and Azure environments.","pos":[103,208],"source":" It creates server\naffinity and may result in exceptions when deployed to web farm and\nAzure environments."},{"content":"Use RSA instead in web farm and Azure scenarios.","pos":[209,258],"source":" Use RSA instead in web farm and \nAzure scenarios."}]},{"pos":[35788,36174],"content":"**Token signing certificates**. Renew token signing certificates\nperiodically to avoid denial of service. Azure AD Access\nControl signs all security tokens it issues. X.509 certificates are\nused for signing when you build an application that consumes SAML\ntokens issued by ACS. When signing certificates expire you will\nreceive errors when trying to request a token.","leadings":["","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Token signing certificates<ept id=\"p1\">**</ept>.","pos":[0,31],"source":"**Token signing certificates**."},{"content":"Renew token signing certificates periodically to avoid denial of service.","pos":[32,105],"source":" Renew token signing certificates\nperiodically to avoid denial of service."},{"content":"Azure AD Access Control signs all security tokens it issues.","pos":[106,166],"source":" Azure AD Access\nControl signs all security tokens it issues."},{"content":"X.509 certificates are used for signing when you build an application that consumes SAML tokens issued by ACS.","pos":[167,277],"source":" X.509 certificates are\nused for signing when you build an application that consumes SAML\ntokens issued by ACS."},{"content":"When signing certificates expire you will receive errors when trying to request a token.","pos":[278,366],"source":" When signing certificates expire you will\nreceive errors when trying to request a token."}]},{"pos":[36179,36540],"content":"**Token signing keys**. Renew token signing keys periodically to\navoid denial of service. Azure AD Access Control signs all\nsecurity tokens it issues. 256-bit symmetric signing keys are used\nwhen you build an application that consumes SWT tokens issued by\nACS. When signing keys expire you will receive errors when trying to\nrequest a token.","leadings":["","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Token signing keys<ept id=\"p1\">**</ept>.","pos":[0,23],"source":"**Token signing keys**."},{"content":"Renew token signing keys periodically to avoid denial of service.","pos":[24,89],"source":" Renew token signing keys periodically to\navoid denial of service."},{"content":"Azure AD Access Control signs all security tokens it issues.","pos":[90,150],"source":" Azure AD Access Control signs all\nsecurity tokens it issues."},{"content":"256-bit symmetric signing keys are used when you build an application that consumes SWT tokens issued by ACS.","pos":[151,260],"source":" 256-bit symmetric signing keys are used\nwhen you build an application that consumes SWT tokens issued by\nACS."},{"content":"When signing keys expire you will receive errors when trying to request a token.","pos":[261,341],"source":" When signing keys expire you will receive errors when trying to\nrequest a token."}]},{"pos":[36545,36955],"content":"**Token encryption certificates**. Renew token encryption\ncertificates periodically to avoid denial of service. Token\nencryption is required if a relying party application is a web\nservice using proof-of-possession tokens over the WS-Trust protocol,\nin other cases token encryption is optional. When encryption\ncertificates expire you will receive errors when trying to request a\ntoken.","leadings":["","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Token encryption certificates<ept id=\"p1\">**</ept>.","pos":[0,34],"source":"**Token encryption certificates**."},{"content":"Renew token encryption certificates periodically to avoid denial of service.","pos":[35,111],"source":" Renew token encryption\ncertificates periodically to avoid denial of service."},{"content":"Token encryption is required if a relying party application is a web service using proof-of-possession tokens over the WS-Trust protocol, in other cases token encryption is optional.","pos":[112,294],"source":" Token\nencryption is required if a relying party application is a web\nservice using proof-of-possession tokens over the WS-Trust protocol,\nin other cases token encryption is optional."},{"content":"When encryption certificates expire you will receive errors when trying to request a token.","pos":[295,386],"source":" When encryption\ncertificates expire you will receive errors when trying to request a\ntoken."}]},{"pos":[36960,37382],"content":"**Token decryption certificates**. Renew token decryption\ncertificates periodically to avoid denial of service. Azure\nAD Access Control can accept encrypted tokens from WS-Federation\nidentity providers (for example, AD FS 2.0). An X.509 certificate\nhosted in Azure AD Access Control is used for decryption.\nWhen decryption certificates expire you will receive errors when\ntrying to request a token.","leadings":["","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Token decryption certificates<ept id=\"p1\">**</ept>.","pos":[0,34],"source":"**Token decryption certificates**."},{"content":"Renew token decryption certificates periodically to avoid denial of service.","pos":[35,111],"source":" Renew token decryption\ncertificates periodically to avoid denial of service."},{"content":"Azure AD Access Control can accept encrypted tokens from WS-Federation identity providers (for example, AD FS 2.0).","pos":[112,227],"source":" Azure\nAD Access Control can accept encrypted tokens from WS-Federation\nidentity providers (for example, AD FS 2.0)."},{"content":"An X.509 certificate hosted in Azure AD Access Control is used for decryption.","pos":[228,306],"source":" An X.509 certificate\nhosted in Azure AD Access Control is used for decryption."},{"content":"When decryption certificates expire you will receive errors when trying to request a token.","pos":[307,398],"source":"When decryption certificates expire you will receive errors when\ntrying to request a token."}]},{"pos":[37387,37965],"content":"**Service identity credentials**. Renew Service Identity credentials\nperiodically to avoid denial of service. Service identities use\ncredentials that are configured globally for your Azure AD\nAccess Control namespace that allow applications or clients to\nauthenticate directly with Azure AD Access Control and\nreceive a token. There are three credential types that Azure\nAD Access Control service identity can be associated with: Symmetric\nkey, Password, and X.509 certificate. You will start receiving\nexception when the credentials are expired.","leadings":["","    ","    ","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Service identity credentials<ept id=\"p1\">**</ept>.","pos":[0,33],"source":"**Service identity credentials**."},{"content":"Renew Service Identity credentials periodically to avoid denial of service.","pos":[34,109],"source":" Renew Service Identity credentials\nperiodically to avoid denial of service."},{"content":"Service identities use credentials that are configured globally for your Azure AD Access Control namespace that allow applications or clients to authenticate directly with Azure AD Access Control and receive a token.","pos":[110,326],"source":" Service identities use\ncredentials that are configured globally for your Azure AD\nAccess Control namespace that allow applications or clients to\nauthenticate directly with Azure AD Access Control and\nreceive a token."},{"content":"There are three credential types that Azure AD Access Control service identity can be associated with: Symmetric key, Password, and X.509 certificate.","pos":[327,477],"source":" There are three credential types that Azure\nAD Access Control service identity can be associated with: Symmetric\nkey, Password, and X.509 certificate."},{"content":"You will start receiving exception when the credentials are expired.","pos":[478,546],"source":" You will start receiving\nexception when the credentials are expired."}]},{"pos":[37970,38547],"content":"**Azure AD Access Control Management Service account\ncredentials**. Renew Management service credentials periodically to\navoid denial of service. The Azure AD Access Control\nManagement Service is a key component that allows you to\nprogrammatically manage and configure settings for your \nAzure AD Access Control namespace. There are three credential types\nthat the Management service account can be associated with. These\nare symmetric key, password, and an X.509 certificate. You will\nstart receiving exception when the credentials are expired.","leadings":["","    ","    ","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Azure AD Access Control Management Service account credentials<ept id=\"p1\">**</ept>.","pos":[0,67],"source":"**Azure AD Access Control Management Service account\ncredentials**."},{"content":"Renew Management service credentials periodically to avoid denial of service.","pos":[68,145],"source":" Renew Management service credentials periodically to\navoid denial of service."},{"content":"The Azure AD Access Control Management Service is a key component that allows you to programmatically manage and configure settings for your Azure AD Access Control namespace.","pos":[146,322],"source":" The Azure AD Access Control\nManagement Service is a key component that allows you to\nprogrammatically manage and configure settings for your \nAzure AD Access Control namespace."},{"content":"There are three credential types that the Management service account can be associated with.","pos":[323,415],"source":" There are three credential types\nthat the Management service account can be associated with."},{"content":"These are symmetric key, password, and an X.509 certificate.","pos":[416,476],"source":" These\nare symmetric key, password, and an X.509 certificate."},{"content":"You will start receiving exception when the credentials are expired.","pos":[477,545],"source":" You will\nstart receiving exception when the credentials are expired."}]},{"pos":[38552,39226],"content":"**WS-Federation identity provider signing and encryption\ncertificates**. Query for WS-Federation identity provider's\ncertificate validity to avoid denial of service. WS-Federation\nidentity provider certificate is available through its metadata.\nWhen configuring WS-Federation identity provider, such as AD FS, the\nWS-Federation signing certificate is configured through\nWS-Federation metadata available via URL or as a file. After the\nWS-Federation identity provider configured use Azure AD\nAccess Control management service to query it for its certificates\nvalidness. When the certificate expires you will start receiving\nexceptions.","leadings":["","    ","    ","    ","    ","    ","    ","    ","    ","    ","    "],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>WS-Federation identity provider signing and encryption certificates<ept id=\"p1\">**</ept>.","pos":[0,72],"source":"**WS-Federation identity provider signing and encryption\ncertificates**."},{"content":"Query for WS-Federation identity provider's certificate validity to avoid denial of service.","pos":[73,165],"source":" Query for WS-Federation identity provider's\ncertificate validity to avoid denial of service."},{"content":"WS-Federation identity provider certificate is available through its metadata.","pos":[166,244],"source":" WS-Federation\nidentity provider certificate is available through its metadata."},{"content":"When configuring WS-Federation identity provider, such as AD FS, the WS-Federation signing certificate is configured through WS-Federation metadata available via URL or as a file.","pos":[245,424],"source":"When configuring WS-Federation identity provider, such as AD FS, the\nWS-Federation signing certificate is configured through\nWS-Federation metadata available via URL or as a file."},{"content":"After the WS-Federation identity provider configured use Azure AD Access Control management service to query it for its certificates validness.","pos":[425,568],"source":" After the\nWS-Federation identity provider configured use Azure AD\nAccess Control management service to query it for its certificates\nvalidness."},{"content":"When the certificate expires you will start receiving exceptions.","pos":[569,634],"source":" When the certificate expires you will start receiving\nexceptions."}]},{"content":"Shared Hosting Using Azure Websites","pos":[39230,39265]},{"pos":[39267,39377],"content":"All scenarios and solutions outlined in this topic are valid when the application is hosted on Azure Websites.","source":"All scenarios and solutions outlined in this topic are valid when the\napplication is hosted on Azure Websites."},{"content":"Azure Virtual Machines","pos":[39381,39403]},{"pos":[39405,39523],"content":"All scenarios and solutions outlined in this topic are valid when the application is hosted on Azure Virtual Machines.","source":"All scenarios and solutions outlined in this topic are valid when the\napplication is hosted on Azure Virtual Machines."},{"content":"Resources","pos":[39527,39536]},{"content":"Identity Developer Training Kit","pos":[39543,39574]},{"content":"MSDN-hosted Identity Developer Training Course","pos":[39628,39674]},{"content":"A Guide to Claims-based Identity and Access Control","pos":[39728,39779]},{"content":"Access Control Service","pos":[39833,39855]},{"content":"ACS How To's","pos":[39924,39936]},{"content":"Secure Azure Web Role ASP.NET Web Application Using Access Control Service v2.0","pos":[40005,40084]},{"content":"Azure AD Access Control Service (ACS) Academy Videos","pos":[40161,40213]},{"content":"Microsoft Security Development Lifecycle","pos":[40290,40330]},{"content":"SDL Threat Modeling Tool 3.1.8","pos":[40389,40419]},{"content":"Security and Privacy Blogs","pos":[40500,40526]},{"content":"Security Response Center","pos":[40586,40610]},{"content":"Security Intelligence Report","pos":[40670,40698]},{"content":"Security Development Lifecycle","pos":[40745,40775]},{"content":"Security Developer Center (MSDN)","pos":[40834,40866]},{"content":"01","pos":[40908,40910]},{"content":"02","pos":[40962,40964]},{"content":"03","pos":[41026,41028]},{"content":"04","pos":[41085,41087]},{"content":"05","pos":[41133,41135]},{"content":"06","pos":[41185,41187]},{"content":"07","pos":[41228,41230]},{"content":"08","pos":[41273,41275]},{"content":"09","pos":[41323,41325]},{"content":"10","pos":[41359,41361]},{"content":"11","pos":[41421,41423]},{"content":"12","pos":[41484,41486]},{"content":"13","pos":[41533,41535]},{"content":"14","pos":[41591,41593]},{"content":"15","pos":[41642,41644]},{"content":"16","pos":[41708,41710]},{"content":"17","pos":[41770,41772]},{"content":"18","pos":[41827,41829]},{"content":"19","pos":[41875,41877]},{"content":"20","pos":[41928,41930]},{"content":"Web SSO Design","pos":[41992,42006]},{"content":"Federated Web SSO Design","pos":[42068,42092]}],"content":"#Azure Security Guidance\n\n##Abstract\n\nWhen developing applications for Azure, identity and\naccess are the primary security concerns that you need to keep in mind.\nThis topic explains the key security concerns related to identity and access in the cloud and how you\ncan best protect your cloud applications.\n\n##Overview\n\nAn application's security is a function of its surface. The more surface\nthat the application exposes the greater the security concerns. For\nexample, an application that runs as an unattended batch process exposes\nless, from a security perspective, than a publicly available website.\n\nWhen you move to the cloud you gain a certain peace of mind about\ninfrastructure and networking since these are managed in data centers\nwith world-class security practices, tools, technology. On the other\nhand, the cloud intrinsically exposes more surface area for your\napplication that can be potentially exploited by attackers. This is\nbecause many cloud technologies and services are exposed as end points\nvs. in-memory components. Azure storage, Service Bus, SQL\nDatabase (formerly SQL Azure), and many other services are accessible\nvia their endpoints over the wire.\n\nIn cloud applications more responsibility lays on the shoulders of the\napplication developers to design, develop, and maintain their cloud\napplications to high security standards to keep attackers at bay.\nConsider the following diagram (from J.D. Meier's [Azure Security\nNotes PDF](http://blogs.msdn.com/b/jmeier/archive/2010/08/03/now-available-azure-security-notes-pdf.aspx)): notice how the infrastructure part is being addressed by the\ncloud provider--in our case by Azure--leaving more security work\nto the application developers:\n\n![Securing the application][01]\n\nThe good news is that all of the security development practices,\nprinciples, and techniques you already know still apply when developing\ncloud applications. Consider the following key areas that must be\naddressed:\n\n-   All input is validated for type, length, range, and string patterns\n    to avoid injection attacks, and all the data your app echoes back is\n    properly sanitized.\n-   Sensitive data should be protected at rest and on the wire to\n    mitigate information disclosure and data tampering threats.\n-   Auditing and logging must be properly implemented to mitigate non\n    repudiation threats.\n-   Authentication and Authorization should be implemented using proven\n    mechanisms offered by the platform to prevent identity spoofing and\n    elevation of privileges threats.\n\nFor a complete list of threats, attacks, vulnerabilities, and\ncountermeasures refer to patterns & practices' [Cheat Sheet: Web\nApplication Security Frame](http://msdn.microsoft.com/library/ff649461.aspx) and [Security Guidance for Applications Index](http://msdn.microsoft.com/library/ff650760.aspx).\n\nIn the cloud, authentication and access control mechanisms are very\ndifferent than those available for on-premises applications. There are\nmany more authentication and access options offered for cloud\napplications that can lead to confusion, and as a result, to flawed\nimplementations. More confusion is introduced when defining what a cloud\napp is. For example, the application could be deployed to the cloud yet\nits authentication mechanism might be provided by Active Directory. On\nother hand, the application could be deployed on-premises but with\nauthentication mechanisms in the cloud (for example, by Azure\nActive Directory Access Control (previously known as Access Control\nService or ACS)).\n\n##Threats, Vulnerabilities, and Attacks\n\nA threat is a potential bad outcome that you want to avoid such as the\ndisclosure of sensitive information or a service becoming unavailable.\nIt is common practice to classify threats by using the acronym \"STRIDE\":\n\n-   **S**poofing or identity theft\n-   **T**ampering with data\n-   **R**epudiation of actions\n-   **I**nformation disclosure\n-   **D**enial of service\n-   **E**levation of privileges\n\nVulnerabilities are bugs that we, as developers, introduce into the code\nthat make an application exploitable by attackers. For example, sending\nsensitive data in clear text makes an information disclosure threat\npossible by a traffic sniffing attack.\n\nAttacks are the exploitation of those vulnerabilities to cause harm to\nan application. For example, a Cross Site Scripting, or XSS, is an\nattack that exploits unsanitized output. Another example is\neavesdropping on the wire to capture credentials sent in clear. These\nattacks can lead to an identity spoof threat being realized. To make it\nsimple consider threats, vulnerabilities, and attacks as bad things.\nConsider the following diagrams as a balcony view of the bad things\nrelated to a Web application deployed to Azure (from J.D.\nMeier's [Azure Security Notes PDF](http://blogs.msdn.com/b/jmeier/archive/2010/08/03/now-available-azure-security-notes-pdf.aspx)):\n\n![Threats Vulnerabilities and Attacks][02]\n\nYou, as a developer, have control over the vulnerabilities. The fewer\nvulnerabilities that you introduce, the fewer options that are left to\nattacker to exploit.\n\nIdentity and access related vulnerabilities leave you open to all\nthreats in the STRIDE model. For example, an improperly implemented\nauthentication mechanism may lead to an identity spoof and, as a result,\ninformation disclosure, data tampering, elevated privileges operations,\nor even shutting down the service altogether. Consider the following\nquestions that may point to potential vulnerabilities in your cloud\napp's identity and access implementation:\n\n-   Are you sending credentials in clear over the wire to your\n    Azure services?\n-   Do you store Azure services credentials in clear?\n-   Do your Azure services credentials follow strong password\n    policies?\n-   Do you rely on Azure to verify credentials vs.\n    using custom verification mechanisms?\n-   Do you limit Azure services authentication sessions or token\n    lifetime to a reasonable time window?\n-   Do you verify permissions for each Azure entry point of your\n    distributed cloud app?\n-   Does your authorization mechanism fail securely without exposing\n    sensitive information, or without allowing limitless access?\n\n##Countermeasures\n\nThe best countermeasure against an attack is by using the identity and\naccess mechanisms offered by the platform rather than implementing your\nown. Consider the following prominent identity and access technologies:\n\n**Windows Identity Foundation (WIF).** WIF is a .NET runtime library\nincluded with the .NET Framework 4.5 (it is also available as separate\ndownload for .NET 3.5/4.0). WIF does the heavy lifting for handling\nprotocols such as WS-Federation and WS-Trust and tokens handling such as\nSecurity Assertion Markup Language (SAML) so you don't need to write\nvery complex security-related code in your application. The following\nresources provide in-depth information about WIF:\n\n-   [Windows Identity Foundation 4.5 Samples](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=wif&f%5B1%5D.Type=Topic&f%5B1%5D.Value=claims-based%20authentication) on MSDN Code Gallery.\n-   [Windows Identity Foundation 4.5 tools for Visual Studio 11 Beta](http://visualstudiogallery.msdn.microsoft.com/e21bf653-dfe1-4d81-b3d3-795cb104066e) on\n    MSDN Code Gallery.\n-   [Windows Identity Foundation runtime (.Net 3.5/4.0)](http://www.microsoft.com/download/details.aspx?id=17331) on MSDN.\n-   [Windows Identity Foundation 3.5/4.0 samples and Visual Studio\n    2008/2010 templates](http://www.microsoft.com/download/details.aspx?displaylang=en&id=4451) on MSDN.\n\n**Azure AD Access Control (previously known as ACS)**. \nAzure AD Access Control is a cloud service that provides Security Token\nService (STS) and allows federation with different identity providers\n(IdPs) such as a corporate Active Directory or Internet IdPs such as\nWindows Live ID / Microsoft Account, Facebook, Google, Yahoo!, and Open\nID 2.0 identity providers. The following resources provide in-depth\ninformation about Azure AD Access Control:\n\n-   [Access Control Service 2.0](http://msdn.microsoft.com/library/gg429786.aspx) \n-   [Scenarios and Solutions Using ACS](http://msdn.microsoft.com/library/gg185920.aspx)\n-   [ACS How To's](http://msdn.microsoft.com/library/windowsazure/gg185939.aspx)\n-   [A Guide to Claims-Based Identity and Access Control](http://msdn.microsoft.com/library/ff423674.aspx)\n-   [Identity Developer Training Kit](http://www.microsoft.com/download/details.aspx?id=14347)\n-   [MSDN-hosted Identity Developer Training Course](http://msdn.microsoft.com/IdentityTrainingCourse)\n\n**Active Directory Federation Services (AD FS).**Active Directory\nFederation Services (AD FS) 2.0 provides support for claims-aware\nidentity solutions that involve Windows Server?? and Active Directory\ntechnology. AD FS 2.0 supports the WS-Trust, WS-Federation, and SAML\nprotocols. The following resources provide in-depth information about AD\nFS:\n\n-   [AD FS 2.0 Content Map](http://social.technet.microsoft.com/wiki/contents/articles/2735.ad-fs-2-0-content-map.aspx)\n-   [Web SSO Design][Web SSO Design]\n-   [Federated Web SSO Design][Federated Web SSO Design]\n\n**Azure Shared Access Signatures.** Shared Access Signatures\nenable you to fine-tune access to a blob or container resource. The\nfollowing resources provide in-depth information about Shared Access\nSignatures.\n\n-   [Managing Access to Blobs and Containers](http://msdn.microsoft.com/library/ee393343.aspx)\n-   [New Storage Feature: Shared Access Signatures](http://blog.smarx.com/posts/new-storage-feature-signed-access-signatures)\n-   [Shared Access Signatures Are Easy These Days](http://blog.smarx.com/posts/shared-access-signatures-are-easy-these-days)\n\n##Scenarios Map\n\nThis section briefly outlines the key scenarios covered in this topic.\nUse it as a map to determine the right identity solution for your\napplication.\n\n-   **ASP.NET Web Form Application with Federated Authentication.** In\n    this scenario you control access to your ASP.NET Web Forms app using\n    either Internet identity such as Live ID / Microsoft Account or\n    corporate identity managed in Windows Server Active Directory.\n-   **WCF (SOAP) Service with Federated Authentication.**In this\n    scenario you control access to your WCF (SOAP) service using Service\n    Identities managed by Azure AD Access Control.\n-   **WCF (SOAP) Service with Federated Authentication, Identities in\n    Active Directory.** In this scenario you control access to your WCF\n    (SOAP) web service using identities managed by corporate Windows\n    Server Active Directory.\n-   **WCF (REST) Service With Federated Authentication.**In this\n    scenario you control access to your WCF (REST) service using Service\n    Identities managed by Azure AD Access Control.\n-   **WCF (REST) Service With Live ID / Microsoft Account, Facebook,\n    Google, Yahoo!, Open ID.** In this scenario you control access to\n    your WCF (REST) service using Internet identity such as Live ID /\n    Microsoft Account.\n-   **ASP.NET Web App to REST WCF Service Using Shared SWT Token.** In\n    this scenario you have distributed application with front end\n    ASP.NET web app and downstream REST service and you want to flow end\n    user's context through physical tiers.\n-   **Role-Based Access Control (RBAC) Authorization In Claims-Aware\n    Applications and Services.** In this scenario you want to implement\n    authorization logic in your app based on roles.\n-   **Claims-Based Authorization In Claims-Aware Applications and\n    Services.** In this scenario you want to implement authorization\n    logic in your app based on complex authorization rules.\n-   **Azure Storage Service Identity and Access Scenarios.**In\n    this scenario you need to securely share access to Azure\n    storage blobs and containers.\n-   **Azure SQL Database Identity and Access Scenarios.**SQL\n    Database supports only SQL Server Authentication. Windows\n    Authentication (integrated security) is not supported. Users must\n    provide credentials (login and password) every time they connect to\n    SQL Database.\n-   **Azure Service Bus Identity and Access Scenarios.**In this\n    scenario you need securely access Azure Service Bus queues.\n-   **In-Memory Cache Identity and Access Scenarios.**In this scenario\n    you need to securely access data managed by in-memory cache.\n-   **Azure Marketplace Identity and Access Scenarios.**In this\n    scenario you need to securely access Azure Marketplace\n    datasets.\n\n##Azure Identity and Access Scenarios\n\nThis section outlines common identity and access scenarios for different\napplication architectures. Use the Scenarios Map for a quick\norientation.\n\n###ASP.NET Web Form Application with Federated Authentication\n\nIn this application architecture scenario your web application may be\ndeployed to Azure or on-premises. The application requires that\nits users will be authenticated by either corporate Active Directory or\nInternet identity providers.\n\nTo solve this scenarios use Azure AD Access control and Windows\nIdentity Foundation.\n\n![Azure Active Directory Access control][03]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Create My First Claims-Aware ASP.NET Application Using ACS](http://msdn.microsoft.com/library/gg429779.aspx)\n-   [How To: Host Login Pages in Your ASP.NET Web Application](http://msdn.microsoft.com/library/gg185926.aspx)\n-   [How To: Implement Claims Authorization in a Claims-Aware ASP.NET Application Using WIF and ACS](http://msdn.microsoft.com/library/gg185907.aspx)    \n-   [How To: Implement Role Based Access Control (RBAC) in a Claims-Aware\n    ASP.NET Application Using WIF and ACS](http://msdn.microsoft.com/library/gg185914.aspx)\n-   [How To: Configure Trust Between ACS and ASP.NET Web Applications\n    Using X.509 Certificates](http://msdn.microsoft.com/library/gg185947.aspx)\n-   [Code Sample: ASP.NET Simple Forms](http://msdn.microsoft.com/library/gg185938.aspx)\n\n###WCF (SOAP) Service with Service Identity\n\nIn this application architecture scenario your WCF (SOAP) service may be\ndeployed to Azure or on-premises. The service is being accessed\nas a downstream service by a web application or even by another web\nservice. You need to control access to it using application specific\nidentity. Think of it in terms of the type of app pool account that you\nused in IIS - although the technology is different, the approaches are\nsimilar in that the service is accessed using an application scope\naccount vs. end user account.\n\nUse the Service Identity feature in Azure AD Access control.\nThis is similar to the IIS app pool account you were using when\ndeploying your apps to Windows Server and IIS. Configure Azure\nAD Access Control to issue SAML tokens that will be handled by WIF at\nthe WCF (SOAP) service.\n\n![WCF (SOAP) Service][04]\n\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Add Service Identities with an X.509 Certificate, Password,\n    or Symmetric Key](http://msdn.microsoft.com/library/gg185924.aspx)\n-   [How To: Authenticate with a Client Certificate to a WCF Service\n    Protected by ACS](http://msdn.microsoft.com/library/hh289316.aspx)\n-   [How To: Authenticate with a Username and Password to a WCF Service\n    Protected by ACS](http://msdn.microsoft.com/library/gg185954.aspx)\n-   [Code Sample: WCF Certificate Authentication](http://msdn.microsoft.com/library/gg185952.aspx)\n-   [Code Sample: WCF Username Authentication](http://msdn.microsoft.com/library/gg185927.aspx)\n\n###WCF (SOAP) Service With Federated Authentication, Identities In Active Directory\n\nIn this application architecture scenario your WCF (SOAP) service may be\ndeployed to Azure or on-premises. You need to control access to\nit by using an identity that is managed by a corporate Windows Server\nActive Directory (AD).\n\nUse Azure AD Access Control configured for federation with\nWindows Server AD FS. In this case you do not need to configure Service\nIdentity with Azure AD Access Control. The agent that needs to\naccess the WCF (SOAP) service provides credentials to AD FS and upon\nsuccessful authentication is issued the token by AD FS. The token is\nthen submitted to Azure AD Access Control and reissued back to\nthe agent. The agent uses the token to submit request to the WCF (SOAP)\nservice.\n\n![WCF (SOAP) Service With AD][05]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Add Service Identities with an X.509 Certificate, Password,\n    or Symmetric Key](http://msdn.microsoft.com/library/gg185924.aspx)\n-   [How To: Configure AD FS 2.0 as an Identity Provider](http://msdn.microsoft.com/library/gg185961.aspx)\n-   [How To: Use Management Service to Configure AD FS 2.0 as an\n    Enterprise Identity Provider](http://msdn.microsoft.com/library/gg185905.aspx)\n-   [Code Sample: WCF Federated Authentication With AD FS 2.0\n](http://msdn.microsoft.com/library/hh127796.aspx)\n\n###WCF (REST) Service With Service Identities\n\nIn this scenario your WCF (REST) service may be deployed to \nAzure or on-premises. The service is accessed as a downstream service by\na web application or by another web service. You need to control access\nto it using an application-specific identity Think of it in terms of the\ntype of app pool account that you used in IIS - although the technology\nis different, the approaches are similar in that the service is accessed\nusing an application scope account vs. end user account.\n\nUse the Service Identity feature in Azure AD Access Control.\nConfigure Azure AD Access Control to issue Simple Web Token\n(SWT) tokens. To handle the SWT token on the REST service side, you can\neither implement a custom token handler and plug it into the WIF\npipeline, or you can parse it \"manually\" without using the WIF\ninfrastructure.\n\nConsider the following diagram (WIF is optional):\n\n![REST Service][06]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Configure Trust Between ACS and WCF Service Using Symmetric\n    Keys](http://msdn.microsoft.com/library/gg185958.aspx)\n-   [How To: Authenticate to a REST WCF Service Deployed to Azure\n    Using ACS](http://msdn.microsoft.com/library/hh289317.aspx)\n-   [Code Sample: ASP.NET Web Service](http://msdn.microsoft.com/library/gg983271.aspx)\n-   [Code Sample: Windows Phone 7 Application](http://msdn.microsoft.com/library/gg983271.aspx)\n-   [REST WCF With SWT Token Issued By Azure Access Control\n    Service (ACS)](http://code.msdn.microsoft.com/REST-WCF-With-SWT-Token-123d93c0)\n\n###WCF (REST) Service with Live ID / Microsoft Account, Facebook, Google, Yahoo!, Open ID\n\nIn this scenario, your WCF (REST) service can be deployed to \nAzure or on-premises. You need to control access to it using a public\nInternet identity, such as Live ID / Microsoft Account or Facebook.\n\nUse Azure AD Access Control to issue SWT tokens. To handle the\nSWT token on the REST service side, you can implement a custom token\nhandler and plug it into a WIF pipeline, or you can parse it \"manually\"\nwithout using the WIF infrastructure.\n\nIt is important to note that in order to implement this scenario, the\napplication needs to use web browser control to collect end user\ncredentials. This makes it unsuitable for scenarios in which the REST\nservice is accessed from an ASP.NET web app. It is only suitable for\nscenarios in which the REST service is being accessed by the user's\nclient application, such as a Windows Phone 7 app or a rich desktop\nclient. The key reason for popping the web browser control is that\nInternet identities don't natively support active profile scenarios (web\nservices scenario). Internet identities mainly support passive profile\nscenarios (web apps) that rely on browser redirects: this is where web\nbrowser control comes handy.\n\nConsider the following diagram (WIF is optional, and thus not shown):\n\n![WIF is optional][07]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Authenticate to a REST WCF Service Deployed to Azure Using ACS](http://msdn.microsoft.com/library/hh289317.aspx)\n-   [How To: Configure Google as an Identity Provider](http://msdn.microsoft.com/library/gg185976.aspx)\n-   [How To: Configure Facebook as an Identity Provider](http://msdn.microsoft.com/library/gg185919.aspx)\n-   [How To: Configure Yahoo! as an Identity Provider](http://msdn.microsoft.com/library/gg185977.aspx)\n-  [ Code Sample: Windows Phone 7 Application](http://msdn.microsoft.com/library/gg983271.aspx)\n-   [REST WCF With SWT Token Issued By Azure Access Control\n    Service (ACS)](http://code.msdn.microsoft.com/REST-WCF-With-SWT-Token-123d93c0)\n\n\n###ASP.NET Web App to REST WCF Service Using Shared SWT Token\n\nIn this scenario you have a distributed application with a front-end\nASP.NET web app and a downstream REST service and you want to maintain\nthe end user's context across physical tiers. This is sometimes needed\nwhen implementing authorization logic or logging based on the end user's\nidentity in the downstream REST service.\n\nConfigure Azure AD Access Control to issue SWT token. The SWT\ntoken is issued to the front-end ASP.NET web app and then shared with\nthe downstream REST service. In this case, there is only one relying\nparty configured in Azure AD Access Control. However, there are\nseveral caveats:\n\n-   Since WIF does not provide a SWT token handler out of the box you\n    need to implement a custom token handler to be used with the ASP.NET\n    web app. You should rely on the heavy lifting that WIF does to\n    support the WS-Federation protocol that relies on browser redirects\n    vs. implementing it yourself.\n-   When implementing a SWT custom token handler, make sure the\n    bootstrap token is being addressed to make sure it's retained.\n    Otherwise you won't be able to share it and send it to the\n    downstream REST service.\n-   You don't have to use WIF on a REST service; rather, you can parse\n    the token \"manually\" since there is no need to handle redirects in\n    this case.\n\n![ASP.NET Web Application][08]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Configure Google as an Identity Provider](http://msdn.microsoft.com/library/gg185976.aspx)\n-   [How To: Configure Facebook as an Identity Provider](http://msdn.microsoft.com/library/gg185919.aspx)\n-   [How To: Configure Yahoo! as an Identity Provider](http://msdn.microsoft.com/library/gg185977.aspx)\n-   [ASP.NET Web App To REST WCF Service Delegation Using Shared SWT\n    Token](http://code.msdn.microsoft.com/ASPNET-Web-App-To-REST-WCF-b2b95f82)\n\n###Role-Based Access Control (RBAC) In Claims-Aware Applications and Services\n\nIn this scenario you need to implement authorization in your web\napplication or service based on user roles: user with required roles get\naccess and those that don't have required roles are denied. Simply put,\nyour application needs to answer simple question - is the user in role\nX?\n\nThere are several ways to solve this scenario. You can use Azure\nAD Access Control, WIF Claims Authentication Manager,\nsamlSecurityTokenRequirement mapping, or Customer Role Manager.\n\nWIF is used in all cases. WIF supports the IPrincipal.IsInRole(\"MyRole\")\nmethod. In most of the cases the key is to make sure there is role type\nclaim with URI of\nhttp://schemas.microsoft.com/ws/2008/06/identity/claims/role in the\ntoken so that WIF can successfully verify role membership when the\nIsInRole method is called.\n\n**Azure AD Access Control**. In this implementation the \nAzure AD Access Control claims transformation rule engine is used. Using\nthe claims transformation rule engine rules you can transform any\nincoming claim into a role type claim so that when the token hits the\napplication or a service WIF can parse this role claim to make sure\nIsInRole method call is succesful.\n\n![][09]\n\n**WIF ClaimsAuthenticationManager**. In this implementation use\nClaimsAuthenticationManager as WIF's extensibility point. Using this\napproach you transform any arbitrary incoming claims to a role claim\ntype at the application. The complexity of the transformation is only\nlimited by the code you write.\n\n![][10]\n\n**samlSecurityTokenRequriement mapping**. In this implementation you use\nthe samlSecurityTokenRequirement configuration in web.config to tell WIF\nwhich claim types behave as if they were role claim types. For example,\nif the token carries a claim of group type, you can map it to role claim\ntype. You can achieve only simple mappings using this approach.\n\n![][11]\n\n**Custom RoleManager.** In this implementation you implement custom\nRoleManger. WIF is used to inspect the incoming claims when implementing\ncustom RoleManager interface methods such as GetAllRoles().\n\n![][12]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Implement Role Based Access Control (RBAC) in a Claims-Aware\n    ASP.NET Application Using WIF and ACS](http://msdn.microsoft.com/library/gg185914.aspx)\n-   [How To: Implement Token Transformation Logic Using Rules](http://msdn.microsoft.com/library/gg185955.aspx)\n-   [Authorization With RoleManager For Claims Aware (WIF) ASP.NET Web\n    Applications](http://blogs.msdn.com/b/alikl/archive/2010/11/18/authorization-with-rolemanager-for-claims-aware-wif-asp-net-web-applications.aspx)\n-   Code Sample: Using Claims In IsInRole in [Windows Identity Foundation\n    SDK](http://www.microsoft.com/downloads/details.aspx?FamilyID=c148b2df-c7af-46bb-9162-2c9422208504)\n\n###Claims-Based Authorization In Claims-Aware Applications and Services\n\nIn this scenario you need to implement complex authorization logic in\nyour web application or service and the IsInRole() method is not\nsatisfactory for your authorization needs. If your authorization\napproach relies on roles then consider implementing role-based access\ncontrol outlined in previous section.\n\nUse ClaimsAuthorizationManager as the WIF extensibility point.\nClaimsAuthorizationManager allows external access check calls so that\nyour application code looks cleaner and more maintainable than when\naccess checks implemented in the application's code.\n\n![][13]\n\nRefer to the following resources to implement this scenario:\n\n-   [How To: Implement Token Transformation Logic Using Rules](http://msdn.microsoft.com/library/gg185955.aspx)\n-   [How To: Implement Claims Authorization in a Claims-Aware ASP.NET\n    Application Using WIF and ACS](http://msdn.microsoft.com/library/gg185907.aspx)\n-   Code Sample: Claims based Authorization in [Windows Identity\n    Foundation SDK](http://www.microsoft.com/downloads/details.aspx?FamilyID=c148b2df-c7af-46bb-9162-2c9422208504)\n\n\n##Azure Storage Service Identity and Access Scenarios\n\nIn this scenario you need to securely share access to Azure\nstorage blobs and containers.\n\nUse Shared Access Signatures. To access your storage service account\nfrom your own application, use the shared hash that is available through\nAzure portal when you configure and manage your storage service\naccounts. When you want to give someone else access to the blobs and\ncontainers in your storage service account use Shared Access Signatures\nURL's.\n\nPay special attention to securely managing the information to avoid its\nexposure; also, pay special attention to the lifetime of the Shared\nAccess Signatures.\n\n![][14]\n\nRefer to the following resources to solve this scenario\n\n-   [Managing Access to Blobs and Containers](http://msdn.microsoft.com/library/ee393343.aspx)\n-   [New Storage Feature: Shared Access Signatures](http://blog.smarx.com/posts/new-storage-feature-signed-access-signatures)\n-   [Shared Access Signatures Are Easy These Days](http://blog.smarx.com/posts/shared-access-signatures-are-easy-these-days)\n\n\n## Azure SQL Database Identity and Access Scenarios\n\n\nSQL Database only supports SQL Server Authentication. Windows\nAuthentication (integrated security) is not supported. Users must\nprovide credentials (login and password) every time they connect to a\nSQL Database. Pay special attention when managing your username and\npassword to avoid information disclosure.\n\n\n![][15]\n\n\nTo solve this scenario, refer to the following Help topic:<br/>\n[Azure SQL Database Development: How-to Topics](http://msdn.microsoft.com/library/azure/ee621787.aspx)\n\n\nOr refer to one of its many child topics, some of which are:\n\n\n- [How to: Connect to SQL Database Using sqlcmd](http://msdn.microsoft.com/library/azure/ee336280.aspx)\n- [Code sample: Retry logic for connecting to Azure SQL Database with ADO.NET](http://msdn.microsoft.com/library/azure/ee336243.aspx)\n- [How to: Connect to SQL Database Using PHP](http://msdn.microsoft.com/library/azure/ff394110.aspx)\n- [How to: Connect to SQL Database Using JDBC](http://msdn.microsoft.com/library/azure/gg715284.aspx)\n\n\nOr refer to:<br/>\n[Azure SQL Database Security Guidelines and Limitations](http://msdn.microsoft.com/library/azure/ff394108.aspx#authentication)\n\n\n##Azure Service Bus Identity and Access Scenarios\n\nThe Service Bus and Azure AD Access Control have a special\nrelationship in that each Service Bus service namespace is paired with a\nmatching Access Control service namespace of the same name, with the\nsuffix \"-sb\". The reason for this special relationship is in the way\nthat Service Bus and Access Control manage their mutual trust\nrelationship and the associated cryptographic secrets. Refer to the\nresources listed below for more details.\n\n![][16]\n\nRefer to the following resources to solve this scenario:\n\n-   [Securing Service Bus with ACS](http://channel9.msdn.com/posts/Securing-Service-Bus-with-ACS) (Video)\n-   [Securing Service Bus with ACS](https://skydrive.live.com/view.aspx?cid=123CCD2A7AB10107&resid=123CCD2A7AB10107%211849) (Slides)\n-   [Service Bus Authentication and Authorization with the Access Control\n    Service](http://msdn.microsoft.com/library/hh403962.aspx)\n\n##In-Memory Cache Identity and Access Scenarios\n\nIn-memory cache (formerly known as Azure Cache) relies on\nAzure AD Access Control for authentication. It uses shared keys\navailable through the management portal. Use the keys in your code or\nconfiguration files when accessing the cache. Be sure to store the keys\nsecurely so as to avoid information disclosure.\n\n![][17]\n\n\nRefer to the following resources to solve this scenario:\n\n-   [How to: Configure a Cache Client Programmatically for Azure\n    Caching](http://msdn.microsoft.com/library/windowsazure/gg618003.aspx)\n-   [How to: Configure a Cache Client using the Application Configuration\n    File for Azure Caching](http://msdn.microsoft.com/library/windowsazure/gg278346.aspx)\n-   [Azure Service Bus and Caching Samples](http://msdn.microsoft.com/library/ee706741.aspx) (Caching Samples\n    section)\n\n##Azure Marketplace Identity and Access Scenarios\n\nEvery access to an Azure Marketplace dataset, whether free or\npaid, must authenticate the user before access is granted. When you\ncreate an application the authentication process must be included in\nyour code. Consider the following common scenarios:\n\n###I Access My Dataset\n\nIn this scenario you are building an application that consumes datasets\nin your Marketplace subscription. You are the user of the application.\nThe application can be deployed either to Azure, on-premises, or Marketplace.\n\nUse the shared key that's available through your Marketplace\nsubscription. You obtain the shared key using the Marketplace portal.\n\n![][18]\n\nRefer to the following resources to solve this scenario:\n\n-   [Use HTTP Basic Auth in your Marketplace App](http://msdn.microsoft.com/library/gg193417.aspx)\n\n###Users Access My Datasets\n\nIn this scenario you are building an application that allows users to\naccess your dataset. The application can be deployed on Azure,\non-premises, or Marketplace.\n\nTo solve this scenario, use OAuth delegation. Users will be prompted to\nprovide their Live ID / Microsoft Account credentials, and then they\nwill be taken through the consent process.\n\n![][19]\n\nRefer to the following resources to solve this scenario:\n\n-   [OAuth Web Client Example](http://go.microsoft.com/fwlink/?LinkId=219162)\n-   [OAuth Rich Client Example](http://go.microsoft.com/fwlink/?LinkId=219163)\n\n###Application Access Marketplace API\n\nIn this scenario you are building an application that accesses the\nMarketplace API. The Marketplace API requires authentication to\nsuccessfully accomplish calls to it. The application is deployed to\nAzure Marketplace.\n\n![][20]\n\nConsult the Marketplace publishing kit for details about the\nauthentication implementation.\n\nRefer to the following resources to solve this scenario:\n\n-   [Download the App Publishing Kit](http://go.microsoft.com/fwlink/?LinkId=221323)\n-   [Introduction to Azure Marketplace for Applications](https://datamarket.azure.com/)\n\n##Security Knobs\n\nThis section outlines security knobs for Windows Identity Foundation and\nAzure AD Access Control. Use it as a basic security checklist\nfor these technologies when designing and deploying your application.\n\n###Windows Identity Foundation\n\nThe following are key security knobs of WIF. The information below is a\ndigest from [WIF Design Considerations](http://msdn.microsoft.com/library/ee517298.aspx) and [Windows Identity Foundation\n(WIF) Security for ASP.NET Web Applications - Threats & Countermeasures](http://blogs.msdn.com/b/alikl/archive/2010/12/02/windows-identity-foundation-wif-security-for-asp-net-web-applications-threats-amp-countermeasures.aspx)\n.\n\n-   **IssuerNameRegistry**. Specifies trusted Security Token Services\n    (STS's). Make sure only trusted STS are listed.\n-   **cookieHandler requireSsl=\"true\"**. Specifies whether session\n    cookies transferred over the SSL protocol.\n-   **wsFederation's requireHttps=\"true\"**. Specifies whether the\n    federation protocol communication with identity provider performed\n    over SSL protocol.\n-   **tokenReplayDetection enabled=\"true\"**. Specifies whether token\n    replay detection feature is enabled. Be aware that this feature\n    creates server affinity as it manages local copies of used tokens.\n-   **audienceUris**. Specifies intended audience of the token. If your\n    application receives a token that was not intended for your app it\n    will be rejected by WIF.\n-   **requestValidation** and **httpRuntime requestValidationType**.\n    Enables/disables ASP.NET validation feature. See guidance as\n    outlined in [Windows Identity Foundation (WIF): A Potentially\n    Dangerous Request.Form Value Was Detected from the Client](http://social.technet.microsoft.com/wiki/contents/articles/1725.windows-identity-foundation-wif-a-potentially-dangerous-request-form-value-was-detected-from-the-client-wresult-t-requestsecurityto.aspx)\n\n###Azure AD Access Control\n\nConsider the following security knobs in Azure AD Access Control\ndeployment. The information below is a digest from [ACS Security\nGuidelines](http://msdn.microsoft.com/library/gg185962.aspx) and [Certificates and Keys Management Guidelines](http://msdn.microsoft.com/library/hh204521.aspx).\n\n-   **STS tokens expiration**. Use Azure AD Access Control\n    management portal to set aggressive token expiration.\n-   **Data validation when using the Error URL feature**. Azure\n    AD Access Control Error URL feature requires anonymous access to the\n    app's page where it sends error messages. Assume all data coming to\n    this page as dangerous from untrusted source.\n-   **Encrypting tokens for highly sensitive scenarios**. To mitigate\n    threat of information disclosure that available in the token\n    consider encrypting the tokens.\n-   **Encrypting cookies using RSA when deploying to Azure**.\n    WIF encrypts cookies using DPAPI by default. It creates server\n    affinity and may result in exceptions when deployed to web farm and\n    Azure environments. Use RSA instead in web farm and \n    Azure scenarios.\n-   **Token signing certificates**. Renew token signing certificates\n    periodically to avoid denial of service. Azure AD Access\n    Control signs all security tokens it issues. X.509 certificates are\n    used for signing when you build an application that consumes SAML\n    tokens issued by ACS. When signing certificates expire you will\n    receive errors when trying to request a token.\n-   **Token signing keys**. Renew token signing keys periodically to\n    avoid denial of service. Azure AD Access Control signs all\n    security tokens it issues. 256-bit symmetric signing keys are used\n    when you build an application that consumes SWT tokens issued by\n    ACS. When signing keys expire you will receive errors when trying to\n    request a token.\n-   **Token encryption certificates**. Renew token encryption\n    certificates periodically to avoid denial of service. Token\n    encryption is required if a relying party application is a web\n    service using proof-of-possession tokens over the WS-Trust protocol,\n    in other cases token encryption is optional. When encryption\n    certificates expire you will receive errors when trying to request a\n    token.\n-   **Token decryption certificates**. Renew token decryption\n    certificates periodically to avoid denial of service. Azure\n    AD Access Control can accept encrypted tokens from WS-Federation\n    identity providers (for example, AD FS 2.0). An X.509 certificate\n    hosted in Azure AD Access Control is used for decryption.\n    When decryption certificates expire you will receive errors when\n    trying to request a token.\n-   **Service identity credentials**. Renew Service Identity credentials\n    periodically to avoid denial of service. Service identities use\n    credentials that are configured globally for your Azure AD\n    Access Control namespace that allow applications or clients to\n    authenticate directly with Azure AD Access Control and\n    receive a token. There are three credential types that Azure\n    AD Access Control service identity can be associated with: Symmetric\n    key, Password, and X.509 certificate. You will start receiving\n    exception when the credentials are expired.\n-   **Azure AD Access Control Management Service account\n    credentials**. Renew Management service credentials periodically to\n    avoid denial of service. The Azure AD Access Control\n    Management Service is a key component that allows you to\n    programmatically manage and configure settings for your \n    Azure AD Access Control namespace. There are three credential types\n    that the Management service account can be associated with. These\n    are symmetric key, password, and an X.509 certificate. You will\n    start receiving exception when the credentials are expired.\n-   **WS-Federation identity provider signing and encryption\n    certificates**. Query for WS-Federation identity provider's\n    certificate validity to avoid denial of service. WS-Federation\n    identity provider certificate is available through its metadata.\n    When configuring WS-Federation identity provider, such as AD FS, the\n    WS-Federation signing certificate is configured through\n    WS-Federation metadata available via URL or as a file. After the\n    WS-Federation identity provider configured use Azure AD\n    Access Control management service to query it for its certificates\n    validness. When the certificate expires you will start receiving\n    exceptions.\n\n##Shared Hosting Using Azure Websites\n\nAll scenarios and solutions outlined in this topic are valid when the\napplication is hosted on Azure Websites.\n\n##Azure Virtual Machines\n\nAll scenarios and solutions outlined in this topic are valid when the\napplication is hosted on Azure Virtual Machines.\n\n##Resources\n\n-   [Identity Developer Training Kit](http://go.microsoft.com/fwlink/?LinkId=214555)\n-   [MSDN-hosted Identity Developer Training Course](http://go.microsoft.com/fwlink/?LinkId=214561)\n-   [A Guide to Claims-based Identity and Access Control](http://go.microsoft.com/fwlink/?LinkId=214562)\n-   [Access Control Service](http://msdn.microsoft.com/library/windowsazure/gg429786.aspx)\n-   [ACS How To's](http://msdn.microsoft.com/library/windowsazure/gg185939.aspx)\n-   [Secure Azure Web Role ASP.NET Web Application Using Access Control Service v2.0](http://social.technet.microsoft.com/wiki/contents/articles/2590.aspx)\n-   [Azure AD Access Control Service (ACS) Academy Videos](http://social.technet.microsoft.com/wiki/contents/articles/2777.aspx)\n-   [Microsoft Security Development Lifecycle](http://www.microsoft.com/security/sdl/default.aspx)\n-   [SDL Threat Modeling Tool 3.1.8](http://www.microsoft.com/download/en/details.aspx?displaylang=en&id=2955)\n-   [Security and Privacy Blogs](http://www.microsoft.com/about/twc/en/us/blogs.aspx)\n-   [Security Response Center](http://www.microsoft.com/security/msrc/default.aspx)\n-   [Security Intelligence Report](http://www.microsoft.com/security/sir/)\n-   [Security Development Lifecycle](http://www.microsoft.com/security/sdl/default.aspx)\n-   [Security Developer Center (MSDN)](http://msdn.microsoft.com/security/)\n\n\n[01]:./media/SecurityRX/01_SecuringTheApplication.gif\n[02]:./media/SecurityRX/02_ThreatsVulnerabilitiesandAttacks.gif\n[03]:./media/SecurityRX/03_WindowsAzureADAccesscontrol.gif\n[04]:./media/SecurityRX/04_WCF(SOAP)Service.gif\n[05]:./media/SecurityRX/05_AzureADAccessControl.gif\n[06]:./media/SecurityRX/06_RESTService.gif\n[07]:./media/SecurityRX/07_WIFisOptional.gif\n[08]:./media/SecurityRX/08_ASPNETWebApptoREST.gif\n[09]:./media/SecurityRX/09_RBAC.gif\n[10]:./media/SecurityRX/10_WIFClaimsAuthenticationManager.gif\n[11]:./media/SecurityRX/11_SecurityTokenRequriementmapping.gif\n[12]:./media/SecurityRX/12_CustomRoleManager.gif\n[13]:./media/SecurityRX/13_ClaimsAuthorizationManager.gif\n[14]:./media/SecurityRX/14_WindowsAzurestorage.gif\n[15]:./media/SecurityRX/15_SQLAzureIdentityandAccessScenarios.gif\n[16]:./media/SecurityRX/16_WindowsAzureServiceBusIdentity.gif\n[17]:./media/SecurityRX/17_WindowsAzureCacheIdentity.gif\n[18]:./media/SecurityRX/18_IAccessMyDataset.gif\n[19]:./media/SecurityRX/19_UsersAccessMyDatasets.gif\n[20]:./media/SecurityRX/20_ApplicationAccessMarketplaceAPI.gif\n\n[Web SSO Design]: http://technet.microsoft.com/library/dd807033(WS.10).aspx\n[Federated Web SSO Design]: http://technet.microsoft.com/library/dd807050(WS.10).aspx\n"}