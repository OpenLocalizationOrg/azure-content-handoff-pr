<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4bd6fc0" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d977007ff909a5e86827d7a033e5e99ba30b40cc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">includes\service-bus-event-hubs-get-started-receive-ephcs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">notp1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">419c45a0250bdbc72ab8fae6f64b002043de8bdc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0284271d2fd95685d66b370f36bc48d2c27de69c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Receive messages with EventProcessorHost</source>
          <target state="new">Receive messages with EventProcessorHost</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept> is a .NET class that simplifies receiving events from Event Hubs by managing persistent checkpoints and parallel receives from those Event Hubs.</source>
          <target state="new"><bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept> is a .NET class that simplifies receiving events from Event Hubs by managing persistent checkpoints and parallel receives from those Event Hubs.</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Using <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>, you can split events across multiple receivers, even when hosted in different nodes.</source>
          <target state="new">Using <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>, you can split events across multiple receivers, even when hosted in different nodes.</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This example shows how to use <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept> for a single receiver.</source>
          <target state="new">This example shows how to use <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept> for a single receiver.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Scaled out event processing<ept id="p1">][]</ept> sample shows how to use <bpt id="p2">[</bpt>EventProcessorHost<ept id="p2">][]</ept> with multiple receivers.</source>
          <target state="new">The <bpt id="p1">[</bpt>Scaled out event processing<ept id="p1">][]</ept> sample shows how to use <bpt id="p2">[</bpt>EventProcessorHost<ept id="p2">][]</ept> with multiple receivers.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To use <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>, you must have an <bpt id="p2">[</bpt>Azure Storage account<ept id="p2">][]</ept>:</source>
          <target state="new">To use <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>, you must have an <bpt id="p2">[</bpt>Azure Storage account<ept id="p2">][]</ept>:</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Log on to the <bpt id="p1">[</bpt>Azure portal<ept id="p1">][]</ept>, and click <bpt id="p2">**</bpt>New<ept id="p2">**</ept> at the top left of the screen.</source>
          <target state="new">Log on to the <bpt id="p1">[</bpt>Azure portal<ept id="p1">][]</ept>, and click <bpt id="p2">**</bpt>New<ept id="p2">**</ept> at the top left of the screen.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Data + Storage<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Storage account<ept id="p2">**</ept>.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Data + Storage<ept id="p1">**</ept>, then click <bpt id="p2">**</bpt>Storage account<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Create storage account<ept id="p1">**</ept> blade, type a name for the storage account.</source>
          <target state="new">In the <bpt id="p1">**</bpt>Create storage account<ept id="p1">**</ept> blade, type a name for the storage account.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Choose an Azure subscription, resource group, and location in which to create the resource.</source>
          <target state="new">Choose an Azure subscription, resource group, and location in which to create the resource.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Then click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</source>
          <target state="new">Then click <bpt id="p1">**</bpt>Create<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the list of storage accounts, click the newly-created storage account.</source>
          <target state="new">In the list of storage accounts, click the newly-created storage account.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the storage account blade, click <bpt id="p1">**</bpt>Access keys<ept id="p1">**</ept>.</source>
          <target state="new">In the storage account blade, click <bpt id="p1">**</bpt>Access keys<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Copy the value of <bpt id="p1">**</bpt>key1<ept id="p1">**</ept> to use later in this tutorial.</source>
          <target state="new">Copy the value of <bpt id="p1">**</bpt>key1<ept id="p1">**</ept> to use later in this tutorial.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a new Visual C# Desktop App project using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</source>
          <target state="new">In Visual Studio, create a new Visual C# Desktop App project using the <bpt id="p1">**</bpt>Console  Application<ept id="p1">**</ept> project template.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Name the project <bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept>.</source>
          <target state="new">Name the project <bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right-click the solution, and then click <bpt id="p1">**</bpt>Manage NuGet Packages for Solution<ept id="p1">**</ept>.</source>
          <target state="new">In Solution Explorer, right-click the solution, and then click <bpt id="p1">**</bpt>Manage NuGet Packages for Solution<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab, then search for <ph id="ph1">`Microsoft Azure Service Bus Event Hub - EventProcessorHost`</ph>.</source>
          <target state="new">Click the <bpt id="p1">**</bpt>Browse<ept id="p1">**</ept> tab, then search for <ph id="ph1">`Microsoft Azure Service Bus Event Hub - EventProcessorHost`</ph>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Ensure that the project name (<bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept>) is specified in the <bpt id="p2">**</bpt>Version(s)<ept id="p2">**</ept> box.</source>
          <target state="new">Ensure that the project name (<bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept>) is specified in the <bpt id="p2">**</bpt>Version(s)<ept id="p2">**</ept> box.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>, and accept the terms of use.</source>
          <target state="new">Click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>, and accept the terms of use.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Visual Studio downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Azure Service Bus Event Hub - EventProcessorHost NuGet package<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.ServiceBus.EventProcessorHost)</ept>, with all its dependencies.</source>
          <target state="new">Visual Studio downloads, installs, and adds a reference to the <bpt id="p1">[</bpt>Azure Service Bus Event Hub - EventProcessorHost NuGet package<ept id="p1">](https://www.nuget.org/packages/Microsoft.Azure.ServiceBus.EventProcessorHost)</ept>, with all its dependencies.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Right-click the <bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept> project, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Class<ept id="p3">**</ept>.</source>
          <target state="new">Right-click the <bpt id="p1">**</bpt>Receiver<ept id="p1">**</ept> project, click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Class<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Name the new class <bpt id="p1">**</bpt>SimpleEventProcessor<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> to create the class.</source>
          <target state="new">Name the new class <bpt id="p1">**</bpt>SimpleEventProcessor<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>Add<ept id="p2">**</ept> to create the class.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add the following statements at the top of the SimpleEventProcessor.cs file:</source>
          <target state="new">Add the following statements at the top of the SimpleEventProcessor.cs file:</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Then, substitute the following code for the body of the class:</source>
          <target state="new">Then, substitute the following code for the body of the class:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This class will be called by the <bpt id="p1">**</bpt>EventProcessorHost<ept id="p1">**</ept> to process events received from the Event Hub.</source>
          <target state="new">This class will be called by the <bpt id="p1">**</bpt>EventProcessorHost<ept id="p1">**</ept> to process events received from the Event Hub.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`SimpleEventProcessor`</ph> class uses a stopwatch to periodically call the checkpoint method on the <bpt id="p1">**</bpt>EventProcessorHost<ept id="p1">**</ept> context.</source>
          <target state="new">Note that the <ph id="ph1">`SimpleEventProcessor`</ph> class uses a stopwatch to periodically call the checkpoint method on the <bpt id="p1">**</bpt>EventProcessorHost<ept id="p1">**</ept> context.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This ensures that, if the receiver is restarted, it will lose no more than five minutes of processing work.</source>
          <target state="new">This ensures that, if the receiver is restarted, it will lose no more than five minutes of processing work.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, add the following <ph id="ph1">`using`</ph> statement at the top of the file:</source>
          <target state="new">In the <bpt id="p1">**</bpt>Program<ept id="p1">**</ept> class, add the following <ph id="ph1">`using`</ph> statement at the top of the file:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Then, replace the <ph id="ph1">`Main`</ph> method in the <ph id="ph2">`Program`</ph> class with the following code, substituting the Event Hub name and the namespace-level connection string that you saved previously, and the storage account and key that you copied in the previous sections.</source>
          <target state="new">Then, replace the <ph id="ph1">`Main`</ph> method in the <ph id="ph2">`Program`</ph> class with the following code, substituting the Event Hub name and the namespace-level connection string that you saved previously, and the storage account and key that you copied in the previous sections.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This tutorial uses a single instance of <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>.</source>
          <target state="new">This tutorial uses a single instance of <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To increase throughput, it is recommended that you run multiple instances of <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>, as shown in the <bpt id="p2">[</bpt>Scaled out event processing<ept id="p2">][]</ept> sample.</source>
          <target state="new">To increase throughput, it is recommended that you run multiple instances of <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept>, as shown in the <bpt id="p2">[</bpt>Scaled out event processing<ept id="p2">][]</ept> sample.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In those cases, the various instances automatically coordinate with each other to load balance the received events.</source>
          <target state="new">In those cases, the various instances automatically coordinate with each other to load balance the received events.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you want multiple receivers to each process <bpt id="p1">*</bpt>all<ept id="p1">*</ept> the events, you must use the <bpt id="p2">**</bpt>ConsumerGroup<ept id="p2">**</ept> concept.</source>
          <target state="new">If you want multiple receivers to each process <bpt id="p1">*</bpt>all<ept id="p1">*</ept> the events, you must use the <bpt id="p2">**</bpt>ConsumerGroup<ept id="p2">**</ept> concept.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When receiving events from different machines, it might be useful to specify names for <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept> instances based on the machines (or roles) in which they are deployed.</source>
          <target state="new">When receiving events from different machines, it might be useful to specify names for <bpt id="p1">[</bpt>EventProcessorHost<ept id="p1">][]</ept> instances based on the machines (or roles) in which they are deployed.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information about these topics, see the <bpt id="p1">[</bpt>Event Hubs Overview<ept id="p1">][]</ept> and <bpt id="p2">[</bpt>Event Hubs Programming Guide<ept id="p2">][]</ept> topics.</source>
          <target state="new">For more information about these topics, see the <bpt id="p1">[</bpt>Event Hubs Overview<ept id="p1">][]</ept> and <bpt id="p2">[</bpt>Event Hubs Programming Guide<ept id="p2">][]</ept> topics.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Event Hubs Overview</source>
          <target state="new">Event Hubs Overview</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Event Hubs Programming Guide</source>
          <target state="new">Event Hubs Programming Guide</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Scaled out event processing</source>
          <target state="new">Scaled out event processing</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Azure Storage account</source>
          <target state="new">Azure Storage account</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>EventProcessorHost</source>
          <target state="new">EventProcessorHost</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Azure portal</source>
          <target state="new">Azure portal</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>